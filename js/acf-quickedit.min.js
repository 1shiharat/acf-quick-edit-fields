!function(t,e){e.acf_quickedit=qe={form:{},field:{_types:{},add_type:function(t){return qe.field._types[t.type]=qe.field.View.extend(t),qe.field._types[t.type]},factory:function(e,i){var a=t(e).attr("data-field-type"),n=qe.field._types;return field_class=a in n?n[a]:qe.field.View,new field_class({el:e,controller:i})}}},qe.form.View=Backbone.View.extend({initialize:function(){var t=this;this.options=arguments[0],Backbone.View.prototype.initialize.apply(this,arguments),this.fields={},this.$(".inline-edit-col-qed [data-key]").each(function(e,i){var a=qe.field.factory(i,this);t.fields[a.key]=a}),this.loadValues()},getFieldsToLoad:function(){var t=[];return _.each(this.fields,function(e,i){e.parent_key?t.push(e.parent_key):t.push(e.key)}),t},loadedValues:function(t){this._setValues(t),this.initValidation()},_setValues:function(t){var e=this;_.each(t,function(t,i){i in e.fields?e.fields[i].setValue(t):_.isObject(t)&&e._setValues(t)})},unload:function(t){_.each(this.fields,function(t){t.unload()})},validationComplete:function(t,e){var i=this;return t.valid?acf.unload.off():_.each(t.errors,function(t){var e=t.input.replace(/^acf\[([0-9a-z_]+)\]$/g,"$1");e in i.fields&&i.fields[e].setError(t.message)}),t},initValidation:function(){var e=this.$el.closest("form"),i=this.getSaveButton();acf.update("post_id",this.options.object_id),acf.add_filter("validation_complete",this.validationComplete,10,this),i.click(function(a){return!acf.validation.active||(acf.validation.ignore?(acf.validation.ignore=0,!0):(a.preventDefault(),a.stopPropagation(),a.stopImmediatePropagation(),acf.validation.$trigger=t(this),acf.validation.fetch({form:e,success:function(t){acf.validation.ignore=1,i.trigger("click")}}),!1))}),t._data(i[0],"events").click.reverse()}}),qe.form.QuickEdit=qe.form.View.extend({loadValues:function(){var e=this;return t.post({url:ajaxurl,data:{action:"get_acf_post_meta",object_id:this.options.object_id,acf_field_keys:this.getFieldsToLoad()},success:function(t){e.loadedValues(t)}}),this},getSaveButton:function(){return this.$el.closest("form").find("button.save")}}),qe.form.BulkEdit=qe.form.View.extend({initialize:function(){qe.form.View.prototype.initialize.apply(this,arguments),acf.add_filter("prepare_for_ajax",this.prepareForAjax,null,this)},prepareForAjax:function(e){var i={};return t.each(e,function(t,e){"___do_not_change"!==e&&(i[t]=e)}),i},loadValues:function(){var e=[];t('[type="checkbox"][name="post[]"]:checked').each(function(){e.push(t(this).val())});var i=this;return t.post({url:ajaxurl,data:{action:"get_acf_post_meta",object_id:e,acf_field_keys:this.getFieldsToLoad()},success:function(t){i.loadedValues(t)}}),this},getSaveButton:function(){return this.$('[type="submit"]#bulk_edit')}}),qe.field.View=wp.media.View.extend({events:{'change [type="checkbox"][data-is-do-not-change="true"]':"dntChanged"},initialize:function(){var t=this;Backbone.View.prototype.initialize.apply(this,arguments),this.key=this.$el.attr("data-key"),this.parent_key=this.$el.attr("data-parent-key"),"false"===this.parent_key&&(this.parent_key=!1),this.$input||(this.$input=this.$('input:not([data-is-do-not-change="true"])')),this.setEditable(!1),this.$("*").on("change",function(){t.resetError()})},setValue:function(t){return this.dntChanged(),this.$input.val(t),this},dntChanged:function(){this.setEditable(!this.$('[type="checkbox"][data-is-do-not-change="true"]').is(":checked"))},setEditable:function(t){this.$input.prop("readonly",!t).prop("disabled",!t)},setError:function(t){return this.$el.attr("data-error-message",t),this},resetError:function(){return this.$el.removeAttr("data-error-message"),this},unload:function(){}})}(jQuery,window);
!function(t,e){var i={type:"file",mediaFrameType:"",events:{"click .select-media":"selectFile","click .remove-media":"removeFile",'change [type="checkbox"][value="___do_not_change"]':"dntChanged"},initialize:function(){this.$input=this.$("button"),this.$hidden=this.$('[type="hidden"]'),e.field.View.prototype.initialize.apply(this,arguments);var t=this,i=acf.get("post_id");this.mediaFrameOpts={field:this.key,multiple:!1,post_id:i,library:this.$hidden.attr("data-library"),mode:"select",type:this.mediaFrameType,select:function(e,i){e&&t.setValue(e.get("id"))}},this.$hidden.data("mime_types")&&(this.mediaFrameOpts.mime_types=this.$hidden.data("mime_types"))},selectFile:function(e){e.preventDefault();var i=acf.media.popup(this.mediaFrameOpts),a=this.$hidden.val();a&&i.on("open",function(){var t,e;t=i.state().get("selection"),e=wp.media.attachment(a),e.fetch(),t.add(e?[e]:[])}),acf.isset(window,"wp","media","view","settings","post")&&t.isNumeric(this.mediaFrameOpts.post_id)&&(wp.media.view.settings.post.id=this.mediaFrameOpts.post_id)},removeFile:function(t){t.preventDefault(),this.setValue("")},setValue:function(t){return this.dntChanged(),this.$hidden.val(t),this}};e.field.add_type(i),e.field.add_type(_.extend(i,{type:"image",mediaFrameType:"image"})),e.field.add_type(i),e.field.add_type({type:"range",events:{'change [type="range"]':"adaptNumber",'mousemove [type="range"]':"adaptNumber",'change [type="number"]':"adaptRange",'mousemove [type="number"]':"adaptRange",'change [type="checkbox"][value="___do_not_change"]':"dntChanged"},adaptNumber:function(){this.$('[type="number"]').val(this.$('[type="range"]').val())},adaptRange:function(){this.$('[type="range"]').val(this.$('[type="number"]').val())}}),e.field.add_type({type:"date_picker",initialize:function(){var i=this;return this.$input=this.$('[type="text"]'),this.$hidden=this.$('[type="hidden"]'),e.field.View.prototype.initialize.apply(this,arguments),this.datePickerArgs={dateFormat:this.$("[data-date_format]").data("date_format"),altFormat:"yymmdd",altField:this.$hidden,changeYear:!0,yearRange:"-100:+100",changeMonth:!0,showButtonPanel:!0,firstDay:this.$("[data-first_day]").data("first_day")},this.$input.datepicker(this.datePickerArgs).on("blur",function(){t(this).val()||i.$hidden.val("")}),t("body > #ui-datepicker-div").length>0&&t("#ui-datepicker-div").wrap('<div class="acf-ui-datepicker" />'),this},setEditable:function(t){e.field.View.prototype.setEditable.apply(this,arguments),this.$hidden.prop("disabled",!t)},setValue:function(e){var i;this.dntChanged();try{i=t.datepicker.parseDate(this.datePickerArgs.altFormat,e)}catch(t){return this}return this.$input.datepicker("setDate",i),this}}),e.field.add_type({type:"date_time_picker",initialize:function(){var i=this;return this.$input=this.$('[type="text"]'),this.$hidden=this.$('[type="hidden"]'),e.field.View.prototype.initialize.apply(this,arguments),this.datePickerArgs={altField:this.$hidden,dateFormat:this.$("[data-date_format]").data("date_format"),altFormat:"yy-mm-dd",timeFormat:this.$("[data-time_format]").data("time_format"),altTimeFormat:"HH:mm:ss",altFieldTimeOnly:!1,changeYear:!0,yearRange:"-100:+100",changeMonth:!0,showButtonPanel:!0,firstDay:this.$("[data-first_day]").data("first_day"),controlType:"select",oneLine:!0},this.$input.datetimepicker(this.datePickerArgs).on("blur",function(){t(this).val()||i.$hidden.val("")}),t("body > #ui-datepicker-div").length>0&&t("#ui-datepicker-div").wrap('<div class="acf-ui-datepicker" />'),this},setEditable:function(t){e.field.View.prototype.setEditable.apply(this,arguments),this.$hidden.prop("disabled",!t)},setValue:function(e){var i;this.dntChanged();try{i=t.datepicker.parseDateTime(this.datePickerArgs.altFormat,this.datePickerArgs.altTimeFormat,e)}catch(t){return this}if(i)return this.$hidden.val(i),this.$input.val(t.datepicker.formatDate(this.datePickerArgs.dateFormat,i)+" "+t.datepicker.formatTime(this.datePickerArgs.timeFormat,i)),this}}),e.field.add_type({type:"time_picker",initialize:function(){var i=this;return this.$input=this.$('[type="text"]'),this.$hidden=this.$('[type="hidden"]'),e.field.View.prototype.initialize.apply(this,arguments),this.datePickerArgs={timeFormat:this.$("[data-time_format]").data("time_format"),altTimeFormat:"HH:mm:ss",altField:this.$hidden,altFieldTimeOnly:!1,showButtonPanel:!0,controlType:"select",oneLine:!0},this.$input.timepicker(this.datePickerArgs).on("blur",function(){t(this).val()||i.$hidden.val("")}),t("body > #ui-datepicker-div").length>0&&t("#ui-datepicker-div").wrap('<div class="acf-ui-datepicker" />'),this},setEditable:function(t){e.field.View.prototype.setEditable.apply(this,arguments),this.$hidden.prop("disabled",!t)},setValue:function(e){var i;this.dntChanged();try{i=t.datepicker.parseTime(this.datePickerArgs.altTimeFormat,e)}catch(t){return this}if(i)return this.$hidden.val(e),this.$input.val(t.datepicker.formatTime(this.datePickerArgs.timeFormat,i)),this}}),e.field.add_type({type:"color_picker",initialize:function(){var t=acf.apply_filters("color_picker_args",{defaultColor:!1,palettes:!0,hide:!0},this.$el);this.$input=this.$('[type="text"]').first().wpColorPicker(t),e.field.View.prototype.initialize.apply(this,arguments)},setValue:function(t){this.dntChanged(),this.$input.wpColorPicker("color",t)},unload:function(){t("body").off("click.wpcolorpicker")}}),e.field.add_type({type:"textarea",initialize:function(){this.$input=this.$("textarea").prop("readonly",!0),e.field.View.prototype.initialize.apply(this,arguments),this.$input.on("keydown keyup",function(t){13!=t.which&&27!=t.which||t.stopPropagation()})}}),e.field.add_type({type:"checkbox",events:{"click .add-choice":"addChoice",'change [type="checkbox"].custom':"removeChoice",'change [type="checkbox"][value="___do_not_change"]':"dntChanged"},initialize:function(){this.$input=this.$('[type="checkbox"]:not([value="___do_not_change"])'),this.$button=this.$("button.add-choice").prop("disabled",!0),e.field.View.prototype.initialize.apply(this,arguments)},setEditable:function(t){this.$input.prop("readonly",!t),this.$button.prop("disabled",!t)},setValue:function(e){var i=this;this.dntChanged(),t.isArray(e)?t.each(e,function(t,e){i.$('[type="checkbox"][value="'+e+'"]').prop("checked",!0)}):this.$('[type="checkbox"][value="'+e+'"]').prop("checked",!0)},addChoice:function(t){t.preventDefault();var e=wp.template("acf-qef-custom-choice-"+this.$el.attr("data-key"));this.$("ul").append(e())},removeChoice:function(e){t(e.target).closest("li").remove()}}),e.field.add_type({type:"radio",initialize:function(){var i,a;this.$input=this.$('[type="radio"]'),e.field.View.prototype.initialize.apply(this,arguments),this.$('[type="radio"]').prop("readonly",!0),this.$("ul.acf-radio-list.other").length&&(i=this.$('[type="text"]'),this.$('[type="radio"]').on("change",function(e){a=t(this).is('[value="other"]:checked'),i.prop("disabled",!a).prop("readonly",!a)}))},setValue:function(t){this.dntChanged(),this.$('[type="radio"][value="'+t+'"]').prop("checked",!0)}}),e.field.add_type({type:"button_group",initialize:function(){var i=(this.$("ul"),this.$("li"));this.$input=this.$('[type="radio"]'),e.field.View.prototype.initialize.apply(this,arguments),this.$('[type="radio"]').prop("readonly",!0),this.$el.is('[data-allow-null="1"]')&&this.$el.on("click",'[type="radio"]',function(e){var a=t(this).closest("li"),d=a.hasClass("selected");if(i.removeClass("selected"),d)return void t(this).prop("checked",!1);a.addClass("selected")})},setValue:function(t){this.dntChanged(),this.$('[type="radio"][value="'+t+'"]').prop("checked",!0).closest("li").addClass("selected")}}),e.field.add_type({type:"select",initialize:function(){e.field.View.prototype.initialize.apply(this,arguments),this.$input=this.$("select").prop("readonly",!0)}}),e.field.add_type({type:"taxonomy",initialize:function(){e.field.View.prototype.initialize.apply(this,arguments),this.$input=this.$('select,input[value!="___do_not_change"]').prop("readonly",!0)},setValue:function(e){var i=this;this.dntChanged(),"number"==typeof e&&(e=[e]),t.each(e,function(e,a){i.$('[value="'+a+'"]').each(function(e,i){t(this).is('[type="radio"],[type="checkbox"]')?t(this).prop("checked",!0):t(this).is("option")&&t(this).prop("selected",!0)})})}}),e.field.add_type({type:"true_false",initialize:function(){e.field.View.prototype.initialize.apply(this,arguments),this.$('[type="radio"]').prop("readonly",!0)},setValue:function(t){this.dntChanged(),this.$('[type="radio"][value="'+t+'"]').prop("checked",!0)}})}(jQuery,acf_quickedit);
!function(i,t){if("undefined"!=typeof inlineEditPost){var e=inlineEditPost.edit,n=inlineEditPost.save,d=inlineEditPost.revert,a=inlineEditPost.setBulk;inlineEditPost.edit=function(n){var d,a,o;return acf.validation.active=1,o=e.apply(this,arguments),d=0,"object"==typeof n&&(d=parseInt(this.getId(n))),a=i("#edit-"+d),this.acf_qed_form=new t.form.QuickEdit({el:a.get(0),object_id:d}),o},inlineEditPost.revert=function(){return!!this.acf_qed_form&&this.acf_qed_form.unload(),d.apply(this,arguments)},inlineEditPost.save=function(){return!!this.acf_qed_form&&this.acf_qed_form.unload(),n.apply(this,arguments)},inlineEditPost.setBulk=function(){var e=a.apply(this,arguments);return this.acf_qed_form=new t.form.BulkEdit({el:i("#bulk-edit").get(0)}),e}}if("undefined"!=typeof inlineEditTax){var o=inlineEditTax.edit,n=inlineEditTax.save,d=inlineEditTax.revert;inlineEditTax.edit=function(e){var n,d,a,r=i('input[name="taxonomy"]').val();return a=o.apply(this,arguments),n=0,"object"==typeof e&&(n=parseInt(this.getId(e))),d=i("#edit-"+n),this.acf_qed_form=new t.form.QuickEdit({el:d.get(0),object_id:r+"_"+n}),a},inlineEditTax.revert=function(){return!!this.acf_qed_form&&this.acf_qed_form.unload(),d.apply(this,arguments)},inlineEditTax.save=function(){return!!this.acf_qed_form&&this.acf_qed_form.unload(),n.apply(this,arguments)}}}(jQuery,window.acf_quickedit);
!function(e){e(".acf-qef-gallery-col").on("mousemove",function(n){var t=(e(this),e(this).find("img"));x=n.offsetX,num=t.length,step=e(this).width()/num,t.each(function(n,t){x>=step*n?e(t).show():e(t).hide()})})}(jQuery);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
