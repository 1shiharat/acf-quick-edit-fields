!function(t,e){e.acf_quickedit=qe={form:{},field:{_types:{},add_type:function(t){return qe.field._types[t.type]=qe.field.View.extend(t),qe.field._types[t.type]},factory:function(e,i){var a=t(e).attr("data-field-type"),n=qe.field._types;return field_class=a in n?n[a]:qe.field.View,new field_class({el:e,controller:i})}}},qe.form.View=Backbone.View.extend({initialize:function(){var t=this;this.options=arguments[0],Backbone.View.prototype.initialize.apply(this,arguments),this.fields={},this.$(".inline-edit-col-qed [data-key]").each(function(e,i){var a=qe.field.factory(i,this);t.fields[a.key]=a}),this.loadValues()},loadedValues:function(t){var e=this;_.each(t,function(t,i){e.fields[i].setValue(t)}),this.initValidation()},unload:function(t){_.each(this.fields,function(t){t.unload()})},validationComplete:function(t,e){var i=this;return t.valid||_.each(t.errors,function(t){var e=t.input.replace(/^acf\[([0-9a-z_]+)\]$/g,"$1");e in i.fields&&i.fields[e].setError(t.message)}),t},initValidation:function(){var e=this.$el.closest("form"),i=this.getSaveButton();acf.update("post_id",this.options.object_id),acf.add_filter("validation_complete",this.validationComplete,10,this),i.click(function(i){return!acf.validation.active||(acf.validation.ignore?(acf.validation.ignore=0,!0):(i.preventDefault(),i.stopPropagation(),i.stopImmediatePropagation(),acf.validation.$trigger=t(this),acf.validation.fetch(e),!1))}),t._data(i[0],"events").click.reverse()}}),qe.form.QuickEdit=qe.form.View.extend({loadValues:function(){var e=this;return t.post({url:ajaxurl,data:{action:"get_acf_post_meta",object_id:this.options.object_id,acf_field_keys:Object.keys(this.fields)},success:function(t){e.loadedValues(t)}}),this},getSaveButton:function(){return this.$el.closest("form").find("button.save")}}),qe.form.BulkEdit=qe.form.View.extend({initialize:function(){qe.form.View.prototype.initialize.apply(this,arguments),acf.add_filter("prepare_for_ajax",this.prepareForAjax,null,this)},prepareForAjax:function(e){var i={};return t.each(e,function(t,e){"___do_not_change"!==e&&(i[t]=e)}),i},loadValues:function(){var e=[];t('[type="checkbox"][name="post[]"]:checked').each(function(){e.push(t(this).val())});var i=this;return t.post({url:ajaxurl,data:{action:"get_acf_post_meta",object_id:e,acf_field_keys:Object.keys(this.fields)},success:function(t){i.loadedValues(t)}}),this},getSaveButton:function(){return this.$('[type="submit"]#bulk_edit')}}),qe.field.View=wp.media.View.extend({events:{'change [type="checkbox"][data-is-do-not-change="true"]':"dntChanged"},initialize:function(){var t=this;Backbone.View.prototype.initialize.apply(this,arguments),this.key=this.$el.attr("data-key"),this.$input||(this.$input=this.$('input:not([data-is-do-not-change="true"])')),this.setEditable(!1),this.$("*").on("change",function(){t.resetError()})},setValue:function(t){return this.dntChanged(),this.$input.val(t),this},dntChanged:function(){this.setEditable(!this.$('[type="checkbox"][data-is-do-not-change="true"]').is(":checked"))},setEditable:function(t){this.$input.prop("readonly",!t).prop("disabled",!t)},setError:function(t){return this.$el.attr("data-error-message",t),this},resetError:function(){return this.$el.removeAttr("data-error-message"),this},unload:function(){}})}(jQuery,window);
!function(t,e){var i={type:"file",mediaFrameType:"",events:{"click .select-media":"selectFile","click .remove-media":"removeFile",'change [type="checkbox"][value="___do_not_change"]':"dntChanged"},initialize:function(){this.$input=this.$("button"),this.$hidden=this.$('[type="hidden"]'),e.field.View.prototype.initialize.apply(this,arguments);var t=this,i=acf.get("post_id");this.mediaFrameOpts={field:this.key,multiple:!1,post_id:i,library:this.$hidden.attr("data-library"),mode:"select",type:this.mediaFrameType,select:function(e,i){e&&t.setValue(e.get("id"))}},this.$hidden.data("mime_types")&&(this.mediaFrameOpts.mime_types=this.$hidden.data("mime_types"))},selectFile:function(e){e.preventDefault();var i=acf.media.popup(this.mediaFrameOpts),a=this.$hidden.val();a&&i.on("open",function(){var t,e;t=i.state().get("selection"),e=wp.media.attachment(a),e.fetch(),t.add(e?[e]:[])}),acf.isset(window,"wp","media","view","settings","post")&&t.isNumeric(this.mediaFrameOpts.post_id)&&(wp.media.view.settings.post.id=this.mediaFrameOpts.post_id)},removeFile:function(t){t.preventDefault(),this.setValue("")},setValue:function(t){return this.dntChanged(),this.$hidden.val(t),this}};e.field.add_type(i),e.field.add_type(_.extend(i,{type:"image",mediaFrameType:"image"})),e.field.add_type(i),e.field.add_type({type:"range",events:{'change [type="range"]':"adaptNumber",'mousemove [type="range"]':"adaptNumber",'change [type="number"]':"adaptRange",'mousemove [type="number"]':"adaptRange",'change [type="checkbox"][value="___do_not_change"]':"dntChanged"},adaptNumber:function(){this.$('[type="number"]').val(this.$('[type="range"]').val())},adaptRange:function(){this.$('[type="range"]').val(this.$('[type="number"]').val())}}),e.field.add_type({type:"date_picker",initialize:function(){var i=this;return this.$input=this.$('[type="text"]'),this.$hidden=this.$('[type="hidden"]'),e.field.View.prototype.initialize.apply(this,arguments),t("body > #ui-datepicker-div").length>0&&t("body > #ui-datepicker-div").wrap('<div class="acf-ui-datepicker" />'),this.datePickerArgs={dateFormat:this.$("[data-date_format]").data("date_format"),altFormat:"yymmdd",altField:this.$hidden,changeYear:!0,yearRange:"-100:+100",changeMonth:!0,showButtonPanel:!0,firstDay:this.$("[data-first_day]").data("first_day")},this.$input.datepicker(this.datePickerArgs).on("blur",function(){t(this).val()||i.$hidden.val("")}),this},setValue:function(e){var i;this.dntChanged();try{i=t.datepicker.parseDate(this.datePickerArgs.altFormat,e)}catch(t){return this}return this.$input.datepicker("setDate",i),this}}),e.field.add_type({type:"date_time_picker",initialize:function(){var i=this;return this.$input=this.$('[type="text"]'),this.$hidden=this.$('[type="hidden"]'),e.field.View.prototype.initialize.apply(this,arguments),t("body > #ui-datepicker-div").length>0&&t("body > #ui-datepicker-div").wrap('<div class="acf-ui-datepicker" />'),this.datePickerArgs={altField:this.$hidden,dateFormat:this.$("[data-date_format]").data("date_format"),altFormat:"yy-mm-dd",timeFormat:this.$("[data-time_format]").data("time_format"),altTimeFormat:"HH:mm:ss",altFieldTimeOnly:!1,changeYear:!0,yearRange:"-100:+100",changeMonth:!0,showButtonPanel:!0,firstDay:this.$("[data-first_day]").data("first_day"),controlType:"select",oneLine:!0},this.$input.datetimepicker(this.datePickerArgs).on("blur",function(){t(this).val()||i.$hidden.val("")}),this},setValue:function(e){var i;this.dntChanged();try{i=t.datepicker.parseDateTime(this.datePickerArgs.altFormat,this.datePickerArgs.altTimeFormat,e)}catch(t){return this}if(i)return this.$hidden.val(i),this.$input.val(t.datepicker.formatDate(this.datePickerArgs.dateFormat,i)+" "+t.datepicker.formatTime(this.datePickerArgs.timeFormat,i)),this}}),e.field.add_type({type:"time_picker",initialize:function(){var i=this;return this.$input=this.$('[type="text"]'),this.$hidden=this.$('[type="hidden"]'),e.field.View.prototype.initialize.apply(this,arguments),t("body > #ui-datepicker-div").length>0&&t("body > #ui-datepicker-div").wrap('<div class="acf-ui-datepicker" />'),this.datePickerArgs={timeFormat:this.$("[data-time_format]").data("time_format"),altTimeFormat:"HH:mm:ss",altField:this.$hidden,altFieldTimeOnly:!1,showButtonPanel:!0,controlType:"select",oneLine:!0},this.$input.timepicker(this.datePickerArgs).on("blur",function(){t(this).val()||i.$hidden.val("")}),this},setValue:function(e){var i;this.dntChanged();try{i=t.datepicker.parseTime(this.datePickerArgs.altTimeFormat,e)}catch(t){return this}if(i)return this.$hidden.val(e),this.$input.val(t.datepicker.formatTime(this.datePickerArgs.timeFormat,i)),this}}),e.field.add_type({type:"color_picker",initialize:function(){this.$input=this.$('[type="text"]').first().wpColorPicker(),e.field.View.prototype.initialize.apply(this,arguments)},setValue:function(t){this.dntChanged(),this.$input.wpColorPicker("color",t)},unload:function(){t("body").off("click.wpcolorpicker")}}),e.field.add_type({type:"textarea",initialize:function(){this.$input=this.$("textarea").prop("readonly",!0),e.field.View.prototype.initialize.apply(this,arguments),this.$input.on("keydown keyup",function(t){13!=t.which&&27!=t.which||t.stopPropagation()})}}),e.field.add_type({type:"checkbox",events:{"click .add-choice":"addChoice",'change [type="checkbox"].custom':"removeChoice",'change [type="checkbox"][value="___do_not_change"]':"dntChanged"},initialize:function(){this.$input=this.$('[type="checkbox"]:not([value="___do_not_change"])'),this.$button=this.$("button.add-choice").prop("disabled",!0),e.field.View.prototype.initialize.apply(this,arguments)},setEditable:function(t){this.$input.prop("readonly",!t),this.$button.prop("disabled",!t)},setValue:function(e){var i=this;this.dntChanged(),t.isArray(e)?t.each(e,function(t,e){i.$('[type="checkbox"][value="'+e+'"]').prop("checked",!0)}):this.$('[type="checkbox"][value="'+e+'"]').prop("checked",!0)},addChoice:function(t){t.preventDefault();var e=wp.template("acf-qef-custom-choice-"+this.$el.attr("data-key"));this.$("ul").append(e())},removeChoice:function(e){t(e.target).closest("li").remove()}}),e.field.add_type({type:"radio",initialize:function(){var i,a;this.$input=this.$('[type="radio"]'),e.field.View.prototype.initialize.apply(this,arguments),this.$('[type="radio"]').prop("readonly",!0),this.$("ul.acf-radio-list.other").length&&(i=this.$('[type="text"]'),this.$('[type="radio"]').on("change",function(e){a=t(this).is('[value="other"]:checked'),i.prop("disabled",!a).prop("readonly",!a)}))},setValue:function(t){this.dntChanged(),this.$('[type="radio"][value="'+t+'"]').prop("checked",!0)}}),e.field.add_type({type:"select",initialize:function(){e.field.View.prototype.initialize.apply(this,arguments),this.$input=this.$("select").prop("readonly",!0)}}),e.field.add_type({type:"true_false",initialize:function(){e.field.View.prototype.initialize.apply(this,arguments),this.$('[type="radio"]').prop("readonly",!0)},setValue:function(t){this.dntChanged(),this.$('[type="radio"][value="'+t+'"]').prop("checked",!0)}})}(jQuery,acf_quickedit);
!function(i,t){if("undefined"!=typeof inlineEditPost){var e=inlineEditPost.edit,n=inlineEditPost.save,d=inlineEditPost.revert,o=inlineEditPost.setBulk;inlineEditPost.edit=function(n){var d,o;e.apply(this,arguments),d=0,"object"==typeof n&&(d=parseInt(this.getId(n))),o=i("#edit-"+d),this.acf_qed_form=new t.form.QuickEdit({el:o.get(0),object_id:d})},inlineEditPost.revert=function(){return!!this.acf_qed_form&&this.acf_qed_form.unload(),d.apply(this,arguments)},inlineEditPost.save=function(){return!!this.acf_qed_form&&this.acf_qed_form.unload(),n.apply(this,arguments)},inlineEditPost.setBulk=function(){var e=o.apply(this,arguments);return this.acf_qed_form=new t.form.BulkEdit({el:i("#bulk-edit").get(0)}),e}}if("undefined"!=typeof inlineEditTax){var a=inlineEditTax.edit,n=inlineEditTax.save,d=inlineEditTax.revert;inlineEditTax.edit=function(e){var n,d,o=i('input[name="taxonomy"]').val();a.apply(this,arguments),n=0,"object"==typeof e&&(n=parseInt(this.getId(e))),d=i("#edit-"+n),this.acf_qed_form=new t.form.QuickEdit({el:d.get(0),object_id:o+"_"+n})},inlineEditTax.revert=function(){return!!this.acf_qed_form&&this.acf_qed_form.unload(),d.apply(this,arguments)},inlineEditTax.save=function(){return!!this.acf_qed_form&&this.acf_qed_form.unload(),n.apply(this,arguments)}}}(jQuery,window.acf_quickedit);
!function(e){e(".acf-qef-gallery-col").on("mousemove",function(n){var t=(e(this),e(this).find("img"));x=n.offsetX,num=t.length,step=e(this).width()/num,t.each(function(n,t){x>=step*n?e(t).show():e(t).hide()})})}(jQuery);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFjZi1xdWlja2VkaXQtYmFzZS5qcyIsImFjZi1xdWlja2VkaXQtZmllbGRzLmpzIiwiYWNmLXF1aWNrZWRpdC5qcyIsInRodW1ibmFpbC1jb2wuanMiXSwibmFtZXMiOlsiJCIsImV4cG9ydHMiLCJhY2ZfcXVpY2tlZGl0IiwicWUiLCJmb3JtIiwiZmllbGQiLCJfdHlwZXMiLCJhZGRfdHlwZSIsImEiLCJ0eXBlIiwiVmlldyIsImV4dGVuZCIsImZhY3RvcnkiLCJlbCIsImNvbnRyb2xsZXIiLCJhdHRyIiwidHlwZXMiLCJmaWVsZF9jbGFzcyIsIkJhY2tib25lIiwiaW5pdGlhbGl6ZSIsInNlbGYiLCJ0aGlzIiwib3B0aW9ucyIsImFyZ3VtZW50cyIsInByb3RvdHlwZSIsImFwcGx5IiwiZmllbGRzIiwiZWFjaCIsImkiLCJrZXkiLCJsb2FkVmFsdWVzIiwibG9hZGVkVmFsdWVzIiwidmFsdWVzIiwiXyIsInZhbCIsInNldFZhbHVlIiwiaW5pdFZhbGlkYXRpb24iLCJ1bmxvYWQiLCJlIiwidmFsaWRhdGlvbkNvbXBsZXRlIiwianNvbiIsIiRmb3JtIiwidmFsaWQiLCJlcnJvcnMiLCJlcnIiLCJpbnB1dCIsInJlcGxhY2UiLCJzZXRFcnJvciIsIm1lc3NhZ2UiLCIkZWwiLCJjbG9zZXN0IiwiJGJ1dHRvbiIsImdldFNhdmVCdXR0b24iLCJhY2YiLCJ1cGRhdGUiLCJvYmplY3RfaWQiLCJhZGRfZmlsdGVyIiwiY2xpY2siLCJ2YWxpZGF0aW9uIiwiYWN0aXZlIiwiaWdub3JlIiwicHJldmVudERlZmF1bHQiLCJzdG9wUHJvcGFnYXRpb24iLCJzdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24iLCIkdHJpZ2dlciIsImZldGNoIiwiX2RhdGEiLCJyZXZlcnNlIiwiUXVpY2tFZGl0IiwicG9zdCIsInVybCIsImFqYXh1cmwiLCJkYXRhIiwiYWN0aW9uIiwiYWNmX2ZpZWxkX2tleXMiLCJPYmplY3QiLCJrZXlzIiwic3VjY2VzcyIsInJlc3BvbnNlIiwiZmluZCIsIkJ1bGtFZGl0IiwicHJlcGFyZUZvckFqYXgiLCJyZXQiLCJwb3N0X2lkcyIsInB1c2giLCJ3cCIsIm1lZGlhIiwiZXZlbnRzIiwiY2hhbmdlIFt0eXBlPVwiY2hlY2tib3hcIl1bZGF0YS1pcy1kby1ub3QtY2hhbmdlPVwidHJ1ZVwiXSIsIiRpbnB1dCIsInNldEVkaXRhYmxlIiwib24iLCJyZXNldEVycm9yIiwidmFsdWUiLCJkbnRDaGFuZ2VkIiwiaXMiLCJlZGl0YWJsZSIsInByb3AiLCJyZW1vdmVBdHRyIiwialF1ZXJ5Iiwid2luZG93IiwiZmlsZV90eXBlIiwibWVkaWFGcmFtZVR5cGUiLCJjbGljayAuc2VsZWN0LW1lZGlhIiwiY2xpY2sgLnJlbW92ZS1tZWRpYSIsImNoYW5nZSBbdHlwZT1cImNoZWNrYm94XCJdW3ZhbHVlPVwiX19fZG9fbm90X2NoYW5nZVwiXSIsIiRoaWRkZW4iLCJwb3N0X2lkIiwiZ2V0IiwibWVkaWFGcmFtZU9wdHMiLCJtdWx0aXBsZSIsImxpYnJhcnkiLCJtb2RlIiwic2VsZWN0IiwiYXR0YWNobWVudCIsIm1pbWVfdHlwZXMiLCJzZWxlY3RGaWxlIiwibWVkaWFfZnJhbWUiLCJwb3B1cCIsIm1lZGlhX2lkIiwic2VsZWN0aW9uIiwic3RhdGUiLCJhZGQiLCJpc3NldCIsImlzTnVtZXJpYyIsInZpZXciLCJzZXR0aW5ncyIsImlkIiwicmVtb3ZlRmlsZSIsImNoYW5nZSBbdHlwZT1cInJhbmdlXCJdIiwibW91c2Vtb3ZlIFt0eXBlPVwicmFuZ2VcIl0iLCJjaGFuZ2UgW3R5cGU9XCJudW1iZXJcIl0iLCJtb3VzZW1vdmUgW3R5cGU9XCJudW1iZXJcIl0iLCJhZGFwdE51bWJlciIsImFkYXB0UmFuZ2UiLCJsZW5ndGgiLCJ3cmFwIiwiZGF0ZVBpY2tlckFyZ3MiLCJkYXRlRm9ybWF0IiwiYWx0Rm9ybWF0IiwiYWx0RmllbGQiLCJjaGFuZ2VZZWFyIiwieWVhclJhbmdlIiwiY2hhbmdlTW9udGgiLCJzaG93QnV0dG9uUGFuZWwiLCJmaXJzdERheSIsImRhdGVwaWNrZXIiLCJkYXRlIiwicGFyc2VEYXRlIiwidGltZUZvcm1hdCIsImFsdFRpbWVGb3JtYXQiLCJhbHRGaWVsZFRpbWVPbmx5IiwiY29udHJvbFR5cGUiLCJvbmVMaW5lIiwiZGF0ZXRpbWVwaWNrZXIiLCJwYXJzZURhdGVUaW1lIiwiZm9ybWF0RGF0ZSIsImZvcm1hdFRpbWUiLCJ0aW1lcGlja2VyIiwidGltZSIsInBhcnNlVGltZSIsImZpcnN0Iiwid3BDb2xvclBpY2tlciIsIm9mZiIsIndoaWNoIiwiY2xpY2sgLmFkZC1jaG9pY2UiLCJjaGFuZ2UgW3R5cGU9XCJjaGVja2JveFwiXS5jdXN0b20iLCJpc0FycmF5IiwiaWR4IiwiYWRkQ2hvaWNlIiwidHBsIiwidGVtcGxhdGUiLCJhcHBlbmQiLCJyZW1vdmVDaG9pY2UiLCJ0YXJnZXQiLCJyZW1vdmUiLCIkb3RoZXIiLCJpc19vdGhlciIsImlubGluZUVkaXRQb3N0IiwiX3dwX2lubGluZV9lZGl0X3Bvc3QiLCJlZGl0IiwiX3dwX2lubGluZV9lZGl0X3NhdmUiLCJzYXZlIiwiX3dwX2lubGluZV9lZGl0X3JldmVydCIsInJldmVydCIsIl93cF9pbmxpbmVfZWRpdF9idWxrIiwic2V0QnVsayIsIiR0ciIsInBhcnNlSW50IiwiZ2V0SWQiLCJhY2ZfcWVkX2Zvcm0iLCJpbmxpbmVFZGl0VGF4IiwiX3dwX2lubGluZV9lZGl0X3RheCIsInRheCIsIiRpbWciLCJ4Iiwib2Zmc2V0WCIsIm51bSIsInN0ZXAiLCJ3aWR0aCIsInNob3ciLCJoaWRlIl0sIm1hcHBpbmdzIjoiQ0FBQSxTQUFXQSxFQUFHQyxHQUNiQSxFQUFRQyxjQUFnQkMsSUFDdkJDLFFBQ0FDLE9BQ0NDLFVBQ0FDLFNBQVMsU0FBU0MsR0FFakIsTUFEQUwsSUFBR0UsTUFBTUMsT0FBT0UsRUFBRUMsTUFBUU4sR0FBR0UsTUFBTUssS0FBS0MsT0FBT0gsR0FDeENMLEdBQUdFLE1BQU1DLE9BQU9FLEVBQUVDLE9BRTFCRyxRQUFRLFNBQVNDLEVBQUdDLEdBQ25CLEdBQUlMLEdBQU9ULEVBQUVh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S0FBT3RNLEVBQUVxQixNQUFNa0wsUUFBVUYsSUFFMUJILEVBQUt2SyxLQUFNLFNBQVNDLEVBQUVmLEdBQ2pCc0wsR0FBS0csS0FBSzFLLEVBQ2I1QixFQUFFYSxHQUFJMkwsT0FFTnhNLEVBQUVhLEdBQUk0TCxZQUlQdEciLCJmaWxlIjoiYWNmLXF1aWNrZWRpdC5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24oICQsIGV4cG9ydHMgKXtcblx0ZXhwb3J0cy5hY2ZfcXVpY2tlZGl0ID0gcWUgPSB7XG5cdFx0Zm9ybTp7fSxcblx0XHRmaWVsZDoge1xuXHRcdFx0X3R5cGVzOiB7fSwvLyBmaWVsZCB0eXBlc1xuXHRcdFx0YWRkX3R5cGU6ZnVuY3Rpb24oYSkge1xuXHRcdFx0XHRxZS5maWVsZC5fdHlwZXNbYS50eXBlXSA9IHFlLmZpZWxkLlZpZXcuZXh0ZW5kKGEpO1xuXHRcdFx0XHRyZXR1cm4gcWUuZmllbGQuX3R5cGVzW2EudHlwZV07XG5cdFx0XHR9LFxuXHRcdFx0ZmFjdG9yeTpmdW5jdGlvbihlbCxjb250cm9sbGVyKXtcblx0XHRcdFx0dmFyIHR5cGUgPSAkKGVsKS5hdHRyKCdkYXRhLWZpZWxkLXR5cGUnKSxcblx0XHRcdFx0XHR0eXBlcyA9IHFlLmZpZWxkLl90eXBlcztcblxuXHRcdFx0XHRmaWVsZF9jbGFzcyA9IHR5cGUgaW4gdHlwZXMgPyB0eXBlc1t0eXBlXSA6IHFlLmZpZWxkLlZpZXc7XG5cdFx0XHRcdHJldHVybiBuZXcgZmllbGRfY2xhc3Moe1xuXHRcdFx0XHRcdGVsOlx0XHRcdGVsLFxuXHRcdFx0XHRcdGNvbnRyb2xsZXI6XHRjb250cm9sbGVyLFxuXHRcdFx0XHR9KTtcblx0XHRcdH1cblx0XHR9LFxuXG5cdH07XG5cblxuXG5cblx0cWUuZm9ybS5WaWV3ID0gQmFja2JvbmUuVmlldy5leHRlbmQoe1xuXHRcdGluaXRpYWxpemU6ZnVuY3Rpb24oKXtcblxuXHRcdFx0dmFyIHNlbGYgPSB0aGlzO1xuXG5cdFx0XHR0aGlzLm9wdGlvbnMgPSBhcmd1bWVudHNbMF07XG5cblx0XHRcdEJhY2tib25lLlZpZXcucHJvdG90eXBlLmluaXRpYWxpemUuYXBwbHkoIHRoaXMsIGFyZ3VtZW50cyApO1xuXG5cdFx0XHR0aGlzLmZpZWxkcyA9IHt9O1xuXG5cdFx0XHR0aGlzLiQoJy5pbmxpbmUtZWRpdC1jb2wtcWVkIFtkYXRhLWtleV0nKS5lYWNoKGZ1bmN0aW9uKGksZWwpe1xuXHRcdFx0XHR2YXIgZmllbGQgPSBxZS5maWVsZC5mYWN0b3J5KCBlbCwgdGhpcyApO1xuXHRcdFx0XHRzZWxmLmZpZWxkc1sgZmllbGQua2V5IF0gPSBmaWVsZDtcblx0XHRcdH0pO1xuXHRcdFx0Ly8gbG9hZCB2YWx1ZXNcblx0XHRcdHRoaXMubG9hZFZhbHVlcygpO1xuXG5cdFx0fSxcblx0XHRsb2FkZWRWYWx1ZXM6ZnVuY3Rpb24odmFsdWVzKSB7XG5cdFx0XHR2YXIgc2VsZiA9IHRoaXM7XG5cdFx0XHRfLmVhY2godmFsdWVzLGZ1bmN0aW9uKCB2YWwsIGtleSApe1xuXHRcdFx0XHRzZWxmLmZpZWxkc1trZXldLnNldFZhbHVlKCB2YWwgKTtcblx0XHRcdH0pO1xuXHRcdFx0dGhpcy5pbml0VmFsaWRhdGlvbigpO1xuXHRcdH0sXG5cdFx0dW5sb2FkOmZ1bmN0aW9uKGUpe1xuXHRcdFx0Xy5lYWNoKHRoaXMuZmllbGRzLGZ1bmN0aW9uKGZpZWxkKXtcblx0XHRcdFx0ZmllbGQudW5sb2FkKCk7XG5cdFx0XHR9KTtcblx0XHR9LFxuXHRcdHZhbGlkYXRpb25Db21wbGV0ZTpmdW5jdGlvbigganNvbiwgJGZvcm0gKSB7XG5cdFx0XHR2YXIgc2VsZiA9IHRoaXM7XG5cblx0XHRcdGlmICggISBqc29uLnZhbGlkICkge1xuXHRcdFx0XHRfLmVhY2goanNvbi5lcnJvcnMsZnVuY3Rpb24oZXJyKXtcblx0XHRcdFx0XHQvLyBlcnIuaW5wdXQgaXMgaW4gZm9ybWF0IGBhY2ZbPEZJRUxEX0tFWT5dYFxuXHRcdFx0XHRcdHZhciBrZXkgPSBlcnIuaW5wdXQucmVwbGFjZSgvXmFjZlxcWyhbMC05YS16X10rKVxcXSQvZywnJDEnKTtcblx0XHRcdFx0XHRpZiAoIGtleSBpbiBzZWxmLmZpZWxkcyApIHtcblx0XHRcdFx0XHRcdHNlbGYuZmllbGRzW2tleV0uc2V0RXJyb3IoIGVyci5tZXNzYWdlICk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9KTtcblx0XHRcdH1cblx0XHRcdHJldHVybiBqc29uO1xuXHRcdH0sXG5cdFx0aW5pdFZhbGlkYXRpb246ZnVuY3Rpb24oKSB7XG5cdFx0XHR2YXIgJGZvcm0gPSB0aGlzLiRlbC5jbG9zZXN0KCdmb3JtJyksXG5cdFx0XHRcdCRidXR0b24gPSB0aGlzLmdldFNhdmVCdXR0b24oKTtcblxuXHRcdFx0YWNmLnVwZGF0ZSgncG9zdF9pZCcsIHRoaXMub3B0aW9ucy5vYmplY3RfaWQgKTtcblxuXHRcdFx0YWNmLmFkZF9maWx0ZXIoICd2YWxpZGF0aW9uX2NvbXBsZXRlJywgdGhpcy52YWxpZGF0aW9uQ29tcGxldGUsIDEwLCB0aGlzICk7XG4vL1x0XHRcdGFjZi5hZGRfYWN0aW9uKCd2YWxpZGF0aW9uX2ZhaWx1cmUnLCB0aGlzLnZhbGlkYXRpb25GYWlsdXJlICk7XG5cblx0XHRcdCRidXR0b24uY2xpY2soIGZ1bmN0aW9uKGUpIHtcblx0XHRcdFx0Ly8gYmFpbCBlYXJseSBpZiBub3QgYWN0aXZlXG5cdFx0XHRcdGlmKCAhYWNmLnZhbGlkYXRpb24uYWN0aXZlICkge1xuXG5cdFx0XHRcdFx0cmV0dXJuIHRydWU7XG5cblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIGlnbm9yZSB2YWxpZGF0aW9uIChvbmx5IGlnbm9yZSBvbmNlKVxuXHRcdFx0XHRpZiggYWNmLnZhbGlkYXRpb24uaWdub3JlICkge1xuXHRcdFx0XHRcdGFjZi52YWxpZGF0aW9uLmlnbm9yZSA9IDA7XG5cdFx0XHRcdFx0cmV0dXJuIHRydWU7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBzdG9wIFdQIEpTIHZhbGlkYXRpb25cblx0XHRcdFx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xuXHRcdFx0XHRlLnN0b3BQcm9wYWdhdGlvbigpO1xuXHRcdFx0XHRlLnN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbigpO1xuXG5cblx0XHRcdFx0Ly8gc3RvcmUgc3VibWl0IHRyaWdnZXIgc28gaXQgd2lsbCBiZSBjbGlja2VkIGlmIHZhbGlkYXRpb24gaXMgcGFzc2VkXG5cdFx0XHRcdGFjZi52YWxpZGF0aW9uLiR0cmlnZ2VyID0gJCh0aGlzKTtcblxuXHRcdFx0XHQvLyBydW4gdmFsaWRhdGlvblxuXHRcdFx0XHRhY2YudmFsaWRhdGlvbi5mZXRjaCggJGZvcm0gKTtcblxuXHRcdFx0XHQvLyBzdG9wIGFsbCBvdGhlciBjbGljayBldmVudHMgb24gdGhpcyBpbnB1dFxuXHRcdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0XHR9KTtcblx0XHRcdC8vIG1vdmUgb3VyIGV2ZW50cyBoYW5kbGVyIHRvIGZyb250XG5cdFx0XHQkLl9kYXRhKCRidXR0b25bMF0sJ2V2ZW50cycpLmNsaWNrLnJldmVyc2UoKVxuXHRcdH1cblx0fSk7XG5cdHFlLmZvcm0uUXVpY2tFZGl0ID0gcWUuZm9ybS5WaWV3LmV4dGVuZCh7XG5cdFx0bG9hZFZhbHVlczogZnVuY3Rpb24oKSB7XG5cdFx0XHR2YXIgc2VsZiA9IHRoaXM7XG5cdFx0XHQkLnBvc3Qoe1xuXHRcdFx0XHR1cmw6YWpheHVybCxcblx0XHRcdFx0ZGF0YTp7XG5cdFx0XHRcdFx0J2FjdGlvbicgOiAnZ2V0X2FjZl9wb3N0X21ldGEnLFxuXHRcdFx0XHRcdCdvYmplY3RfaWQnIDogdGhpcy5vcHRpb25zLm9iamVjdF9pZCxcblx0XHRcdFx0XHQnYWNmX2ZpZWxkX2tleXMnIDogT2JqZWN0LmtleXModGhpcy5maWVsZHMpXG5cdFx0XHRcdH0sXG5cdFx0XHRcdHN1Y2Nlc3M6ZnVuY3Rpb24ocmVzcG9uc2Upe1xuXHRcdFx0XHRcdHNlbGYubG9hZGVkVmFsdWVzKCByZXNwb25zZSApO1xuXHRcdFx0XHR9XG5cdFx0XHR9KTtcblxuXHRcdFx0cmV0dXJuIHRoaXM7XG5cdFx0fSxcblx0XHRnZXRTYXZlQnV0dG9uOmZ1bmN0aW9uKCl7XG5cdFx0XHRyZXR1cm4gdGhpcy4kZWwuY2xvc2VzdCgnZm9ybScpLmZpbmQoJ2J1dHRvbi5zYXZlJylcblx0XHR9XG5cdH0pO1xuXG5cdHFlLmZvcm0uQnVsa0VkaXQgPSBxZS5mb3JtLlZpZXcuZXh0ZW5kKHtcblx0XHQvLyB0b2RvOiBkbyBub3QgY2hhbmdlXG5cdFx0aW5pdGlhbGl6ZTpmdW5jdGlvbigpe1xuXG5cdFx0XHR2YXIgc2VsZiA9IHRoaXM7XG5cblx0XHRcdHFlLmZvcm0uVmlldy5wcm90b3R5cGUuaW5pdGlhbGl6ZS5hcHBseSggdGhpcywgYXJndW1lbnRzICk7XG5cblx0XHRcdGFjZi5hZGRfZmlsdGVyKCAncHJlcGFyZV9mb3JfYWpheCcsIHRoaXMucHJlcGFyZUZvckFqYXgsIG51bGwsIHRoaXMgKTtcblxuXHRcdH0sXG5cdFx0cHJlcGFyZUZvckFqYXg6ZnVuY3Rpb24oZGF0YSl7XG5cdFx0XHR2YXIgcmV0ID0ge307XG5cdFx0XHQkLmVhY2goZGF0YSxmdW5jdGlvbihpLHZhbCl7XG5cdFx0XHRcdGlmICh2YWwgIT09ICdfX19kb19ub3RfY2hhbmdlJykge1xuXHRcdFx0XHRcdHJldFtpXSA9IHZhbDtcblx0XHRcdFx0fVxuXHRcdFx0fSk7XG5cdFx0XHRyZXR1cm4gcmV0O1xuXHRcdH0sXG5cdFx0bG9hZFZhbHVlczogZnVuY3Rpb24oKSB7XG5cdFx0XHR2YXIgcG9zdF9pZHMgPSBbXTtcblx0XHRcdCQoJ1t0eXBlPVwiY2hlY2tib3hcIl1bbmFtZT1cInBvc3RbXVwiXTpjaGVja2VkJykuZWFjaChmdW5jdGlvbigpe1xuXHRcdFx0XHRwb3N0X2lkcy5wdXNoKCQodGhpcykudmFsKCkpXG5cdFx0XHR9KTtcblxuXHRcdFx0dmFyIHNlbGYgPSB0aGlzO1xuXHRcdFx0JC5wb3N0KHtcblx0XHRcdFx0dXJsOmFqYXh1cmwsXG5cdFx0XHRcdGRhdGE6e1xuXHRcdFx0XHRcdCdhY3Rpb24nIDogJ2dldF9hY2ZfcG9zdF9tZXRhJyxcblx0XHRcdFx0XHQnb2JqZWN0X2lkJyA6IHBvc3RfaWRzLFxuXHRcdFx0XHRcdCdhY2ZfZmllbGRfa2V5cycgOiBPYmplY3Qua2V5cyh0aGlzLmZpZWxkcylcblx0XHRcdFx0fSxcblx0XHRcdFx0c3VjY2VzczpmdW5jdGlvbihyZXNwb25zZSl7XG5cdFx0XHRcdFx0c2VsZi5sb2FkZWRWYWx1ZXMoIHJlc3BvbnNlICk7XG5cdFx0XHRcdH1cblx0XHRcdH0pO1xuXG5cdFx0XHRyZXR1cm4gdGhpcztcblx0XHR9LFxuXHRcdGdldFNhdmVCdXR0b246ZnVuY3Rpb24oKXtcblx0XHRcdHJldHVybiB0aGlzLiQoJ1t0eXBlPVwic3VibWl0XCJdI2J1bGtfZWRpdCcpO1xuXHRcdH1cblx0fSk7XG5cblxuXG5cdHFlLmZpZWxkLlZpZXcgPSB3cC5tZWRpYS5WaWV3LmV4dGVuZCh7XG5cdFx0ZXZlbnRzOntcblx0XHRcdCdjaGFuZ2UgW3R5cGU9XCJjaGVja2JveFwiXVtkYXRhLWlzLWRvLW5vdC1jaGFuZ2U9XCJ0cnVlXCJdJyA6ICdkbnRDaGFuZ2VkJyxcblx0XHR9LFxuXHRcdGluaXRpYWxpemU6ZnVuY3Rpb24oKXtcblx0XHRcdHZhciBzZWxmID0gdGhpcztcblx0XHRcdEJhY2tib25lLlZpZXcucHJvdG90eXBlLmluaXRpYWxpemUuYXBwbHkoIHRoaXMsIGFyZ3VtZW50cyApO1xuXHRcdFx0dGhpcy5rZXkgPSB0aGlzLiRlbC5hdHRyKCdkYXRhLWtleScpO1xuXG5cdFx0XHRpZiAoICEgdGhpcy4kaW5wdXQgKSB7XG5cdFx0XHRcdHRoaXMuJGlucHV0ID0gdGhpcy4kKCdpbnB1dDpub3QoW2RhdGEtaXMtZG8tbm90LWNoYW5nZT1cInRydWVcIl0pJylcblx0XHRcdH1cblx0XHRcdHRoaXMuc2V0RWRpdGFibGUoIGZhbHNlICk7XG5cdFx0XHR0aGlzLiQoJyonKS5vbignY2hhbmdlJyxmdW5jdGlvbigpe3NlbGYucmVzZXRFcnJvcigpfSlcblx0XHR9LFxuXHRcdHNldFZhbHVlOmZ1bmN0aW9uKHZhbHVlKXtcblx0XHRcdHRoaXMuZG50Q2hhbmdlZCggKTtcblx0XHRcdHRoaXMuJGlucHV0LnZhbCh2YWx1ZSk7XG5cdFx0XHRyZXR1cm4gdGhpcztcblx0XHR9LFxuXHRcdGRudENoYW5nZWQ6ZnVuY3Rpb24oKXtcblx0XHRcdHRoaXMuc2V0RWRpdGFibGUoICEgdGhpcy4kKCdbdHlwZT1cImNoZWNrYm94XCJdW2RhdGEtaXMtZG8tbm90LWNoYW5nZT1cInRydWVcIl0nKS5pcygnOmNoZWNrZWQnKSApO1xuXHRcdH0sXG5cdFx0c2V0RWRpdGFibGU6ZnVuY3Rpb24oZWRpdGFibGUpe1xuXHRcdFx0dGhpcy4kaW5wdXQucHJvcCggJ3JlYWRvbmx5JywgISBlZGl0YWJsZSApLnByb3AoICdkaXNhYmxlZCcsICEgZWRpdGFibGUgKTtcblx0XHR9LFxuXHRcdHNldEVycm9yOmZ1bmN0aW9uKG1lc3NhZ2UpIHtcblx0XHRcdHRoaXMuJGVsLmF0dHIoJ2RhdGEtZXJyb3ItbWVzc2FnZScsbWVzc2FnZSk7XG5cdFx0XHRyZXR1cm4gdGhpcztcblx0XHR9LFxuXHRcdHJlc2V0RXJyb3I6ZnVuY3Rpb24oKSB7XG5cdFx0XHR0aGlzLiRlbC5yZW1vdmVBdHRyKCAnZGF0YS1lcnJvci1tZXNzYWdlJyApO1xuXHRcdFx0cmV0dXJuIHRoaXM7XG5cdFx0fSxcblx0XHR1bmxvYWQ6ZnVuY3Rpb24oKXt9XG5cdH0pO1xuXG5cbn0pKGpRdWVyeSx3aW5kb3cpO1xuIiwiKGZ1bmN0aW9uKCAkLCBxZSApe1xuXHR2YXIgZmlsZV90eXBlID0ge1xuXHRcdHR5cGU6J2ZpbGUnLFxuXHRcdG1lZGlhRnJhbWVUeXBlOicnLFxuXHRcdGV2ZW50czp7XG5cdFx0XHQnY2xpY2sgLnNlbGVjdC1tZWRpYScgOiAnc2VsZWN0RmlsZScsXG5cdFx0XHQnY2xpY2sgLnJlbW92ZS1tZWRpYScgOiAncmVtb3ZlRmlsZScsXG5cdFx0XHQnY2hhbmdlIFt0eXBlPVwiY2hlY2tib3hcIl1bdmFsdWU9XCJfX19kb19ub3RfY2hhbmdlXCJdJyA6ICdkbnRDaGFuZ2VkJyxcblx0XHR9LFxuXHRcdGluaXRpYWxpemU6ZnVuY3Rpb24oKSB7XG5cdFx0XHR0aGlzLiRpbnB1dCA9IHRoaXMuJCgnYnV0dG9uJyk7XG5cdFx0XHR0aGlzLiRoaWRkZW4gPSB0aGlzLiQoJ1t0eXBlPVwiaGlkZGVuXCJdJyk7XG5cdFx0XHRxZS5maWVsZC5WaWV3LnByb3RvdHlwZS5pbml0aWFsaXplLmFwcGx5KHRoaXMsYXJndW1lbnRzKTtcblxuXHRcdFx0dmFyIHNlbGYgPSB0aGlzLFxuXHRcdFx0XHRwb3N0X2lkID0gYWNmLmdldCgncG9zdF9pZCcpO1xuXG5cdFx0XHR0aGlzLm1lZGlhRnJhbWVPcHRzID0ge1xuXHRcdFx0XHRmaWVsZFx0XHQ6IHRoaXMua2V5LFxuXHRcdFx0XHRtdWx0aXBsZVx0OiBmYWxzZSxcblx0XHRcdFx0cG9zdF9pZFx0XHQ6IHBvc3RfaWQsXG5cdFx0XHRcdGxpYnJhcnlcdFx0OiB0aGlzLiRoaWRkZW4uYXR0cignZGF0YS1saWJyYXJ5JyksXG5cdFx0XHRcdG1vZGVcdFx0OidzZWxlY3QnLFxuXHRcdFx0XHR0eXBlXHRcdDogdGhpcy5tZWRpYUZyYW1lVHlwZSxcblx0XHRcdFx0c2VsZWN0XHRcdDogZnVuY3Rpb24gKCBhdHRhY2htZW50LCBpICkge1xuXHRcdFx0XHRcdGlmICggISBhdHRhY2htZW50ICkge1xuXHRcdFx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRzZWxmLnNldFZhbHVlKCBhdHRhY2htZW50LmdldCgnaWQnKSApO1xuXHRcdFx0XHR9XG5cdFx0XHR9O1xuXHRcdFx0aWYgKCB0aGlzLiRoaWRkZW4uZGF0YSgnbWltZV90eXBlcycpICkge1xuXHRcdFx0XHR0aGlzLm1lZGlhRnJhbWVPcHRzLm1pbWVfdHlwZXMgPSB0aGlzLiRoaWRkZW4uZGF0YSgnbWltZV90eXBlcycpO1xuXHRcdFx0fVxuXG5cdFx0fSxcblx0XHRzZWxlY3RGaWxlOmZ1bmN0aW9uKGUpe1xuXHRcdFx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xuXHRcdFx0Ly8gQ3JlYXRlIGEgbmV3IG1lZGlhIGZyYW1lXG5cdFx0XHR2YXIgbWVkaWFfZnJhbWUgPSBhY2YubWVkaWEucG9wdXAoIHRoaXMubWVkaWFGcmFtZU9wdHMgKSxcblx0XHRcdFx0bWVkaWFfaWQgPSB0aGlzLiRoaWRkZW4udmFsKCk7XG5cblx0XHRcdGlmICggISEgbWVkaWFfaWQgKSB7XG5cdFx0XHRcdG1lZGlhX2ZyYW1lLm9uKCdvcGVuJyxmdW5jdGlvbigpe1xuXHRcdFx0XHRcdHZhciBzZWxlY3Rpb24sIGF0dGFjaG1lbnQ7XG5cdFx0XHRcdFx0c2VsZWN0aW9uID0gbWVkaWFfZnJhbWUuc3RhdGUoKS5nZXQoJ3NlbGVjdGlvbicpO1xuXHRcdFx0XHRcdGF0dGFjaG1lbnQgPSB3cC5tZWRpYS5hdHRhY2htZW50KCBtZWRpYV9pZCApO1xuXHRcdFx0XHRcdGF0dGFjaG1lbnQuZmV0Y2goKTtcblx0XHRcdFx0XHRzZWxlY3Rpb24uYWRkKCBhdHRhY2htZW50ID8gWyBhdHRhY2htZW50IF0gOiBbXSApO1xuXHRcdFx0XHR9KTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gc2V0IHBvc3QgaWQsIHNvIG5ldyB1cGxvYWRzIGFyZSBhdHRhY2hlZCB0byBlZGl0ZWQgcG9zdFxuXHRcdFx0aWYgKCBhY2YuaXNzZXQod2luZG93LCd3cCcsJ21lZGlhJywndmlldycsJ3NldHRpbmdzJywncG9zdCcpICYmICQuaXNOdW1lcmljKCB0aGlzLm1lZGlhRnJhbWVPcHRzLnBvc3RfaWQgKSApIHtcblxuXHRcdFx0XHR3cC5tZWRpYS52aWV3LnNldHRpbmdzLnBvc3QuaWQgPSB0aGlzLm1lZGlhRnJhbWVPcHRzLnBvc3RfaWQ7XG5cblx0XHRcdH1cblxuXHRcdH0sXG5cdFx0cmVtb3ZlRmlsZTpmdW5jdGlvbihlKXtcblx0XHRcdGUucHJldmVudERlZmF1bHQoKTtcblx0XHRcdHRoaXMuc2V0VmFsdWUoJycpO1xuXHRcdH0sXG5cdFx0c2V0VmFsdWU6ZnVuY3Rpb24odmFsdWUpIHtcblx0XHRcdHRoaXMuZG50Q2hhbmdlZCgpO1xuXHRcdFx0dGhpcy4kaGlkZGVuLnZhbCggdmFsdWUgKTtcblx0XHRcdHJldHVybiB0aGlzO1xuXHRcdH1cblx0fTtcblxuXHQvKipcblx0ICpcdGZpZWxkIHR5cGUgZmlsZVxuXHQgKi9cblx0cWUuZmllbGQuYWRkX3R5cGUoIGZpbGVfdHlwZSApO1xuXG5cdC8qKlxuXHQgKlx0ZmllbGQgdHlwZSBpbWFnZVxuXHQgKi9cblx0cWUuZmllbGQuYWRkX3R5cGUoIF8uZXh0ZW5kKGZpbGVfdHlwZSx7dHlwZTonaW1hZ2UnLG1lZGlhRnJhbWVUeXBlOidpbWFnZSd9KSApO1xuXG5cdHFlLmZpZWxkLmFkZF90eXBlKCBmaWxlX3R5cGUgKTtcblxuXHQvKipcblx0ICpcdGZpZWxkIHR5cGUgcmFuZ2Vcblx0ICovXG5cdHFlLmZpZWxkLmFkZF90eXBlKCB7XG5cdFx0IHR5cGU6J3JhbmdlJyxcblx0XHQgZXZlbnRzOntcblx0XHRcdCAnY2hhbmdlIFt0eXBlPVwicmFuZ2VcIl0nXHRcdDogJ2FkYXB0TnVtYmVyJyxcblx0XHRcdCAnbW91c2Vtb3ZlIFt0eXBlPVwicmFuZ2VcIl0nXHRcdDogJ2FkYXB0TnVtYmVyJyxcblx0XHRcdCAnY2hhbmdlIFt0eXBlPVwibnVtYmVyXCJdJ1x0XHQ6ICdhZGFwdFJhbmdlJyxcblx0XHRcdCAnbW91c2Vtb3ZlIFt0eXBlPVwibnVtYmVyXCJdJ1x0OiAnYWRhcHRSYW5nZScsXG5cdFx0XHQgJ2NoYW5nZSBbdHlwZT1cImNoZWNrYm94XCJdW3ZhbHVlPVwiX19fZG9fbm90X2NoYW5nZVwiXScgOiAnZG50Q2hhbmdlZCcsXG5cdFx0IH0sXG5cdFx0IGFkYXB0TnVtYmVyOmZ1bmN0aW9uKCl7XG5cdFx0XHQgdGhpcy4kKCdbdHlwZT1cIm51bWJlclwiXScpLnZhbCggdGhpcy4kKCdbdHlwZT1cInJhbmdlXCJdJykudmFsKCkgKTtcblx0XHQgfSxcblx0XHQgYWRhcHRSYW5nZTpmdW5jdGlvbigpe1xuXHRcdFx0IHRoaXMuJCgnW3R5cGU9XCJyYW5nZVwiXScpLnZhbCggdGhpcy4kKCdbdHlwZT1cIm51bWJlclwiXScpLnZhbCgpICk7XG5cdFx0IH1cblx0IH0gKTtcblxuXG5cdC8qKlxuICBcdCAqXHRmaWVsZCB0eXBlIGRhdGVfcGlja2VyXG4gIFx0ICovXG4gIFx0cWUuZmllbGQuYWRkX3R5cGUoIHtcbiBcdFx0dHlwZTonZGF0ZV9waWNrZXInLFxuXHRcdGluaXRpYWxpemU6ZnVuY3Rpb24oKSB7XG5cdFx0XHR2YXIgc2VsZiA9IHRoaXM7XG5cdFx0XHR0aGlzLiRpbnB1dFx0XHQ9IHRoaXMuJCggJ1t0eXBlPVwidGV4dFwiXScgKTtcblx0XHRcdHRoaXMuJGhpZGRlblx0PSB0aGlzLiQoICdbdHlwZT1cImhpZGRlblwiXScgKTtcblx0XHRcdHFlLmZpZWxkLlZpZXcucHJvdG90eXBlLmluaXRpYWxpemUuYXBwbHkodGhpcyxhcmd1bWVudHMpO1xuXHRcdFx0aWYoICQoJ2JvZHkgPiAjdWktZGF0ZXBpY2tlci1kaXYnKS5sZW5ndGggPiAwICkge1xuXHRcdFx0XHQkKCdib2R5ID4gI3VpLWRhdGVwaWNrZXItZGl2Jykud3JhcCgnPGRpdiBjbGFzcz1cImFjZi11aS1kYXRlcGlja2VyXCIgLz4nKTtcblx0XHRcdH1cblx0XHRcdHRoaXMuZGF0ZVBpY2tlckFyZ3MgPSB7XG5cdFx0XHRcdFx0ZGF0ZUZvcm1hdFx0XHQ6IHRoaXMuJCgnW2RhdGEtZGF0ZV9mb3JtYXRdJykuZGF0YSgnZGF0ZV9mb3JtYXQnKSxcblx0XHRcdFx0XHRhbHRGb3JtYXRcdFx0OiAneXltbWRkJyxcblx0XHRcdFx0XHRhbHRGaWVsZFx0XHQ6IHRoaXMuJGhpZGRlbixcblx0XHRcdFx0XHRjaGFuZ2VZZWFyXHRcdDogdHJ1ZSxcblx0XHRcdFx0XHR5ZWFyUmFuZ2VcdFx0OiBcIi0xMDA6KzEwMFwiLFxuXHRcdFx0XHRcdGNoYW5nZU1vbnRoXHRcdDogdHJ1ZSxcblx0XHRcdFx0XHRzaG93QnV0dG9uUGFuZWxcdDogdHJ1ZSxcblx0XHRcdFx0XHRmaXJzdERheVx0XHQ6IHRoaXMuJCgnW2RhdGEtZmlyc3RfZGF5XScpLmRhdGEoJ2ZpcnN0X2RheScpXG5cdFx0XHRcdH07XG5cdFx0XHR0aGlzLiRpbnB1dC5kYXRlcGlja2VyKCB0aGlzLmRhdGVQaWNrZXJBcmdzICkub24oJ2JsdXInLGZ1bmN0aW9uKCl7XG5cdFx0XHRcdGlmICggISAkKHRoaXMpLnZhbCgpICkge1xuXHRcdFx0XHRcdHNlbGYuJGhpZGRlbi52YWwoJycpO1xuXHRcdFx0XHR9XG5cdFx0XHR9KTtcblx0XHRcdHJldHVybiB0aGlzO1xuXHRcdH0sXG5cdFx0c2V0VmFsdWU6ZnVuY3Rpb24odmFsdWUpIHtcblx0XHRcdHZhciBkYXRlO1xuXG5cdFx0XHR0aGlzLmRudENoYW5nZWQoKTtcblxuXHRcdFx0dHJ5IHtcblx0XHRcdFx0ZGF0ZSA9ICQuZGF0ZXBpY2tlci5wYXJzZURhdGUoIHRoaXMuZGF0ZVBpY2tlckFyZ3MuYWx0Rm9ybWF0LCB2YWx1ZSApO1xuXHRcdFx0fSBjYXRjaChlcnIpIHtcblx0XHRcdFx0cmV0dXJuIHRoaXM7XG5cdFx0XHR9XG5cdFx0XHR0aGlzLiRpbnB1dC5kYXRlcGlja2VyKCAnc2V0RGF0ZScsIGRhdGUgKTtcblx0XHRcdHJldHVybiB0aGlzO1xuXHRcdH1cbiBcdH0pO1xuXG5cdC8qKlxuIFx0ICpcdGZpZWxkIHR5cGUgZGF0ZV90aW1lX3BpY2tlclxuIFx0ICovXG4gXHRxZS5maWVsZC5hZGRfdHlwZSgge1xuXHRcdHR5cGU6J2RhdGVfdGltZV9waWNrZXInLFxuXHRcdGluaXRpYWxpemU6ZnVuY3Rpb24oKSB7XG5cdFx0XHR2YXIgc2VsZiA9IHRoaXM7XG5cdFx0XHR0aGlzLiRpbnB1dFx0XHQ9IHRoaXMuJCggJ1t0eXBlPVwidGV4dFwiXScgKTtcblx0XHRcdHRoaXMuJGhpZGRlblx0PSB0aGlzLiQoICdbdHlwZT1cImhpZGRlblwiXScgKTtcblx0XHRcdHFlLmZpZWxkLlZpZXcucHJvdG90eXBlLmluaXRpYWxpemUuYXBwbHkodGhpcyxhcmd1bWVudHMpO1xuXHRcdFx0aWYoICQoJ2JvZHkgPiAjdWktZGF0ZXBpY2tlci1kaXYnKS5sZW5ndGggPiAwICkge1xuXHRcdFx0XHQkKCdib2R5ID4gI3VpLWRhdGVwaWNrZXItZGl2Jykud3JhcCgnPGRpdiBjbGFzcz1cImFjZi11aS1kYXRlcGlja2VyXCIgLz4nKTtcblx0XHRcdH1cblx0XHRcdHRoaXMuZGF0ZVBpY2tlckFyZ3MgPSB7XG5cdFx0XHRcdFx0YWx0RmllbGRcdFx0XHQ6IHRoaXMuJGhpZGRlbixcblx0XHRcdFx0XHRkYXRlRm9ybWF0XHRcdFx0OiB0aGlzLiQoJ1tkYXRhLWRhdGVfZm9ybWF0XScpLmRhdGEoJ2RhdGVfZm9ybWF0JyksXG5cdFx0XHRcdFx0YWx0Rm9ybWF0XHRcdFx0OiAneXktbW0tZGQnLFxuXHRcdFx0XHRcdHRpbWVGb3JtYXRcdFx0XHQ6IHRoaXMuJCgnW2RhdGEtdGltZV9mb3JtYXRdJykuZGF0YSgndGltZV9mb3JtYXQnKSxcblx0XHRcdFx0XHRhbHRUaW1lRm9ybWF0XHRcdDogJ0hIOm1tOnNzJyxcblx0XHRcdFx0XHRhbHRGaWVsZFRpbWVPbmx5XHQ6IGZhbHNlLFxuXHRcdFx0XHRcdGNoYW5nZVllYXJcdFx0XHQ6IHRydWUsXG5cdFx0XHRcdFx0eWVhclJhbmdlXHRcdFx0OiBcIi0xMDA6KzEwMFwiLFxuXHRcdFx0XHRcdGNoYW5nZU1vbnRoXHRcdFx0OiB0cnVlLFxuXHRcdFx0XHRcdHNob3dCdXR0b25QYW5lbFx0XHQ6IHRydWUsXG5cdFx0XHRcdFx0Zmlyc3REYXlcdFx0XHQ6IHRoaXMuJCgnW2RhdGEtZmlyc3RfZGF5XScpLmRhdGEoJ2ZpcnN0X2RheScpLFxuXHRcdFx0XHRcdGNvbnRyb2xUeXBlXHRcdFx0OiAnc2VsZWN0Jyxcblx0XHRcdFx0XHRvbmVMaW5lXHRcdFx0XHQ6IHRydWVcblx0XHRcdFx0fTtcblxuXHRcdFx0dGhpcy4kaW5wdXQuZGF0ZXRpbWVwaWNrZXIoIHRoaXMuZGF0ZVBpY2tlckFyZ3MgKS5vbignYmx1cicsZnVuY3Rpb24oKXtcblx0XHRcdFx0aWYgKCAhICQodGhpcykudmFsKCkgKSB7XG5cdFx0XHRcdFx0c2VsZi4kaGlkZGVuLnZhbCgnJyk7XG5cdFx0XHRcdH1cblx0XHRcdH0pO1xuXHRcdFx0cmV0dXJuIHRoaXM7XG5cdFx0fSxcblx0XHRzZXRWYWx1ZTpmdW5jdGlvbih2YWx1ZSkge1xuXHRcdFx0dmFyIGRhdGU7XG5cblx0XHRcdHRoaXMuZG50Q2hhbmdlZCgpO1xuXG5cdFx0XHR0cnkge1xuXHRcdFx0XHRkYXRlID0gJC5kYXRlcGlja2VyLnBhcnNlRGF0ZVRpbWUoXG5cdFx0XHRcdFx0dGhpcy5kYXRlUGlja2VyQXJncy5hbHRGb3JtYXQsXG5cdFx0XHRcdFx0dGhpcy5kYXRlUGlja2VyQXJncy5hbHRUaW1lRm9ybWF0LFxuXHRcdFx0XHRcdHZhbHVlXG5cdFx0XHRcdCk7XG5cdFx0XHR9IGNhdGNoKGVycikge1xuXHRcdFx0XHRyZXR1cm4gdGhpcztcblx0XHRcdH1cblxuXHRcdFx0aWYgKCAhIGRhdGUgKSB7XG5cdFx0XHRcdHJldHVybjtcblx0XHRcdH1cblx0XHRcdC8vKlxuXHRcdFx0dGhpcy4kaGlkZGVuLnZhbChkYXRlKTtcblx0XHRcdHRoaXMuJGlucHV0LnZhbCggJC5kYXRlcGlja2VyLmZvcm1hdERhdGUodGhpcy5kYXRlUGlja2VyQXJncy5kYXRlRm9ybWF0LCBkYXRlKSArICcgJyArICQuZGF0ZXBpY2tlci5mb3JtYXRUaW1lKFxuXHRcdFx0XHR0aGlzLmRhdGVQaWNrZXJBcmdzLnRpbWVGb3JtYXQsXG5cdFx0XHRcdGRhdGVcblx0XHRcdCkpO1xuXHRcdFx0LyovXG5cdFx0XHQvLyB3aWxsIHNldCBmb3JtIGRpcnR5IGlmIGRvbmUgbGlrZSB0aGlzXG5cdFx0XHR0aGlzLiRpbnB1dC5kYXRlcGlja2VyKCAnc2V0RGF0ZScsIGRhdGUgKTtcblx0XHRcdC8vKi9cblx0XHRcdHJldHVybiB0aGlzO1xuXHRcdH1cblx0fSk7XG5cblx0LyoqXG4gXHQgKlx0ZmllbGQgdHlwZSB0aW1lX3BpY2tlclxuIFx0ICovXG4gXHRxZS5maWVsZC5hZGRfdHlwZSgge1xuXHRcdHR5cGU6J3RpbWVfcGlja2VyJyxcblx0XHRpbml0aWFsaXplOmZ1bmN0aW9uKCkge1xuXHRcdFx0dmFyIHNlbGYgPSB0aGlzO1xuXHRcdFx0dGhpcy4kaW5wdXRcdFx0PSB0aGlzLiQoICdbdHlwZT1cInRleHRcIl0nICk7XG5cdFx0XHR0aGlzLiRoaWRkZW5cdD0gdGhpcy4kKCAnW3R5cGU9XCJoaWRkZW5cIl0nICk7XG5cdFx0XHRxZS5maWVsZC5WaWV3LnByb3RvdHlwZS5pbml0aWFsaXplLmFwcGx5KHRoaXMsYXJndW1lbnRzKTtcblx0XHRcdGlmKCAkKCdib2R5ID4gI3VpLWRhdGVwaWNrZXItZGl2JykubGVuZ3RoID4gMCApIHtcblx0XHRcdFx0JCgnYm9keSA+ICN1aS1kYXRlcGlja2VyLWRpdicpLndyYXAoJzxkaXYgY2xhc3M9XCJhY2YtdWktZGF0ZXBpY2tlclwiIC8+Jyk7XG5cdFx0XHR9XG5cdFx0XHR0aGlzLmRhdGVQaWNrZXJBcmdzID0ge1xuIFx0XHRcdFx0XHR0aW1lRm9ybWF0XHRcdFx0OiB0aGlzLiQoJ1tkYXRhLXRpbWVfZm9ybWF0XScpLmRhdGEoJ3RpbWVfZm9ybWF0JyksXG4gXHRcdFx0XHRcdGFsdFRpbWVGb3JtYXRcdFx0OiAnSEg6bW06c3MnLFxuIFx0XHRcdFx0XHRhbHRGaWVsZFx0XHRcdDogdGhpcy4kaGlkZGVuLFxuIFx0XHRcdFx0XHRhbHRGaWVsZFRpbWVPbmx5XHQ6IGZhbHNlLFxuIFx0XHRcdFx0XHRzaG93QnV0dG9uUGFuZWxcdFx0OiB0cnVlLFxuIFx0XHRcdFx0XHRjb250cm9sVHlwZVx0XHRcdDogJ3NlbGVjdCcsXG4gXHRcdFx0XHRcdG9uZUxpbmVcdFx0XHRcdDogdHJ1ZVxuIFx0XHRcdFx0fTtcblxuIFx0XHRcdHRoaXMuJGlucHV0LnRpbWVwaWNrZXIoIHRoaXMuZGF0ZVBpY2tlckFyZ3MgKS5vbignYmx1cicsZnVuY3Rpb24oKXtcbiBcdFx0XHRcdGlmICggISAkKHRoaXMpLnZhbCgpICkge1xuIFx0XHRcdFx0XHRzZWxmLiRoaWRkZW4udmFsKCcnKTtcbiBcdFx0XHRcdH1cbiBcdFx0XHR9KTtcblx0XHRcdHJldHVybiB0aGlzO1xuXHRcdH0sXG4gXHRcdHNldFZhbHVlOmZ1bmN0aW9uKHZhbHVlKSB7XG5cdFx0XHR2YXIgdGltZTtcblxuXHRcdFx0dGhpcy5kbnRDaGFuZ2VkKCk7XG5cdFx0XHR0cnkge1xuXHRcdFx0XHR0aW1lID0gJC5kYXRlcGlja2VyLnBhcnNlVGltZSggdGhpcy5kYXRlUGlja2VyQXJncy5hbHRUaW1lRm9ybWF0LCB2YWx1ZSApO1xuXHRcdFx0fSBjYXRjaChlcnIpe1xuXHRcdFx0XHRyZXR1cm4gdGhpcztcblx0XHRcdH1cblx0XHRcdGlmICggISB0aW1lICkge1xuXHRcdFx0XHRyZXR1cm47XG5cdFx0XHR9XG5cdFx0XHR0aGlzLiRoaWRkZW4udmFsKCB2YWx1ZSApO1xuXHRcdFx0dGhpcy4kaW5wdXQudmFsKCAkLmRhdGVwaWNrZXIuZm9ybWF0VGltZSggdGhpcy5kYXRlUGlja2VyQXJncy50aW1lRm9ybWF0LCB0aW1lICkgKVxuXHRcdFx0cmV0dXJuIHRoaXM7XG4gXHRcdH1cblx0fSk7XG5cblx0LyoqXG4gXHQgKlx0ZmllbGQgdHlwZSB0aW1lX3BpY2tlclxuIFx0ICovXG4gXHRxZS5maWVsZC5hZGRfdHlwZSgge1xuXHRcdHR5cGU6J2NvbG9yX3BpY2tlcicsXG5cdFx0aW5pdGlhbGl6ZTpmdW5jdGlvbigpIHtcblx0XHRcdHRoaXMuJGlucHV0ID0gdGhpcy4kKCdbdHlwZT1cInRleHRcIl0nKS5maXJzdCgpLndwQ29sb3JQaWNrZXIoKTtcblx0XHRcdHFlLmZpZWxkLlZpZXcucHJvdG90eXBlLmluaXRpYWxpemUuYXBwbHkodGhpcyxhcmd1bWVudHMpO1xuXHRcdH0sXG5cdFx0c2V0VmFsdWU6ZnVuY3Rpb24oIHZhbHVlICkge1xuXHRcdFx0dGhpcy5kbnRDaGFuZ2VkKCk7XG5cdFx0XHR0aGlzLiRpbnB1dC53cENvbG9yUGlja2VyKCAnY29sb3InLCB2YWx1ZSApO1xuXHRcdH0sXG5cdFx0dW5sb2FkOmZ1bmN0aW9uKCkge1xuXHRcdFx0JCggJ2JvZHknICkub2ZmKCAnY2xpY2sud3Bjb2xvcnBpY2tlcicgKTtcblx0XHR9XG5cdH0pO1xuXG5cblxuXHQvKipcbiBcdCAqXHRmaWVsZCB0eXBlIHRpbWVfcGlja2VyXG4gXHQgKi9cbiBcdHFlLmZpZWxkLmFkZF90eXBlKCB7XG5cdFx0dHlwZTondGV4dGFyZWEnLFxuXHRcdGluaXRpYWxpemU6ZnVuY3Rpb24oKSB7XG5cdFx0XHR0aGlzLiRpbnB1dCA9IHRoaXMuJCgndGV4dGFyZWEnKS5wcm9wKCAncmVhZG9ubHknLCB0cnVlICk7XG5cblx0XHRcdHFlLmZpZWxkLlZpZXcucHJvdG90eXBlLmluaXRpYWxpemUuYXBwbHkodGhpcyxhcmd1bWVudHMpO1xuXG5cblx0XHRcdHRoaXMuJGlucHV0Lm9uKCdrZXlkb3duIGtleXVwJywgZnVuY3Rpb24oZSkge1xuXHRcdFx0XHRpZiAoIGUud2hpY2ggPT0gMTMgfHwgZS53aGljaCA9PSAyNyApIHtcblx0XHRcdFx0XHRlLnN0b3BQcm9wYWdhdGlvbigpO1xuLy9cdFx0XHRcdFx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xuXHRcdFx0XHR9XG5cdFx0XHR9KTtcblx0XHR9XG5cdH0pO1xuXG5cdC8qKlxuIFx0ICpcdGZpZWxkIHR5cGUgY2hvaWNlXG4gXHQgKi9cblx0Ly8gVG9kb1xuXG5cdC8qKlxuIFx0ICpcdGZpZWxkIHR5cGUgY2hlY2tib3hcbiBcdCAqL1xuXHQvLyBUb2RvXG5cdHFlLmZpZWxkLmFkZF90eXBlKCB7XG5cdFx0dHlwZTonY2hlY2tib3gnLFxuXHRcdGV2ZW50czp7XG5cdFx0XHQnY2xpY2sgLmFkZC1jaG9pY2UnOiAnYWRkQ2hvaWNlJyxcblx0XHRcdCdjaGFuZ2UgW3R5cGU9XCJjaGVja2JveFwiXS5jdXN0b20nIDogJ3JlbW92ZUNob2ljZScsXG5cdFx0XHQnY2hhbmdlIFt0eXBlPVwiY2hlY2tib3hcIl1bdmFsdWU9XCJfX19kb19ub3RfY2hhbmdlXCJdJyA6ICdkbnRDaGFuZ2VkJyxcblx0XHR9LFxuXHRcdGluaXRpYWxpemU6ZnVuY3Rpb24oKSB7XG5cdFx0XHR0aGlzLiRpbnB1dCA9IHRoaXMuJCgnW3R5cGU9XCJjaGVja2JveFwiXTpub3QoW3ZhbHVlPVwiX19fZG9fbm90X2NoYW5nZVwiXSknKTtcblx0XHRcdHRoaXMuJGJ1dHRvbiA9IHRoaXMuJCgnYnV0dG9uLmFkZC1jaG9pY2UnKS5wcm9wKCdkaXNhYmxlZCcsdHJ1ZSk7XG5cdFx0XHRxZS5maWVsZC5WaWV3LnByb3RvdHlwZS5pbml0aWFsaXplLmFwcGx5KHRoaXMsYXJndW1lbnRzKTtcblxuXHRcdH0sXG5cdFx0c2V0RWRpdGFibGU6ZnVuY3Rpb24oZWRpdGFibGUpe1xuXHRcdFx0dGhpcy4kaW5wdXQucHJvcCggJ3JlYWRvbmx5JywgIWVkaXRhYmxlICk7XG5cdFx0XHR0aGlzLiRidXR0b24ucHJvcCggJ2Rpc2FibGVkJywgIWVkaXRhYmxlICk7XG5cdFx0fSxcblx0XHRzZXRWYWx1ZTpmdW5jdGlvbiggdmFsdWUgKSB7XG5cdFx0XHR2YXIgc2VsZiA9IHRoaXM7XG5cdFx0XHR0aGlzLmRudENoYW5nZWQoKTtcblx0XHRcdGlmICggJC5pc0FycmF5KHZhbHVlKSApIHtcblx0XHRcdFx0JC5lYWNoKCB2YWx1ZSwgZnVuY3Rpb24oIGlkeCwgdmFsICkge1xuXHRcdFx0XHRcdHNlbGYuJCggJ1t0eXBlPVwiY2hlY2tib3hcIl1bdmFsdWU9XCInK3ZhbCsnXCJdJyApXG5cdFx0XHRcdFx0XHQucHJvcCggJ2NoZWNrZWQnLCB0cnVlICk7XG5cdFx0XHRcdH0pO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0dGhpcy4kKCAnW3R5cGU9XCJjaGVja2JveFwiXVt2YWx1ZT1cIicrdmFsdWUrJ1wiXScgKVxuXHRcdFx0XHRcdC5wcm9wKCAnY2hlY2tlZCcsIHRydWUgKTtcblx0XHRcdH1cbiBcdFx0fSxcblx0XHRhZGRDaG9pY2U6ZnVuY3Rpb24oZSl7XG5cdFx0XHRlLnByZXZlbnREZWZhdWx0KCk7XG5cdFx0XHR2YXIgdHBsID0gd3AudGVtcGxhdGUoJ2FjZi1xZWYtY3VzdG9tLWNob2ljZS0nICsgdGhpcy4kZWwuYXR0cignZGF0YS1rZXknKSk7XG5cdFx0XHR0aGlzLiQoJ3VsJykuYXBwZW5kKHRwbCgpKTtcblx0XHR9LFxuXHRcdHJlbW92ZUNob2ljZTpmdW5jdGlvbihlKSB7XG5cdFx0XHQkKGUudGFyZ2V0KS5jbG9zZXN0KCdsaScpLnJlbW92ZSgpO1xuXHRcdH1cblxuXHR9KTtcblxuXHQvKipcbiBcdCAqXHRmaWVsZCB0eXBlIHJhZGlvXG4gXHQgKi9cblx0cWUuZmllbGQuYWRkX3R5cGUoIHtcblx0XHR0eXBlOidyYWRpbycsXG5cdFx0aW5pdGlhbGl6ZTpmdW5jdGlvbigpIHtcblx0XHRcdHZhciAkb3RoZXIsIGlzX290aGVyO1xuXG5cdFx0XHR0aGlzLiRpbnB1dCA9IHRoaXMuJCgnW3R5cGU9XCJyYWRpb1wiXScpO1xuXG5cdFx0XHRxZS5maWVsZC5WaWV3LnByb3RvdHlwZS5pbml0aWFsaXplLmFwcGx5KHRoaXMsYXJndW1lbnRzKTtcblxuXHRcdFx0dGhpcy4kKCdbdHlwZT1cInJhZGlvXCJdJykucHJvcCggJ3JlYWRvbmx5JywgdHJ1ZSApO1xuXG5cdFx0XHRpZiAoIHRoaXMuJCgndWwuYWNmLXJhZGlvLWxpc3Qub3RoZXInKS5sZW5ndGggKSB7XG5cdFx0XHRcdCRvdGhlciA9IHRoaXMuJCgnW3R5cGU9XCJ0ZXh0XCJdJyk7XG5cdFx0XHRcdHRoaXMuJCgnW3R5cGU9XCJyYWRpb1wiXScpLm9uKCdjaGFuZ2UnLGZ1bmN0aW9uKGUpe1xuXG5cdFx0XHRcdFx0aXNfb3RoZXIgPSAkKHRoaXMpLmlzKCdbdmFsdWU9XCJvdGhlclwiXTpjaGVja2VkJyk7XG5cdFx0XHRcdFx0JG90aGVyXG5cdFx0XHRcdFx0XHQucHJvcCgnZGlzYWJsZWQnLCAhIGlzX290aGVyIClcblx0XHRcdFx0XHRcdC5wcm9wKCdyZWFkb25seScsICEgaXNfb3RoZXIgKTtcblxuXHRcdFx0XHR9KVxuXHRcdFx0fVxuXHRcdH0sXG5cdFx0c2V0VmFsdWU6ZnVuY3Rpb24oIHZhbHVlICkge1xuXHRcdFx0dGhpcy5kbnRDaGFuZ2VkKCk7XG5cdFx0XHR0aGlzLiQoJ1t0eXBlPVwicmFkaW9cIl1bdmFsdWU9XCInK3ZhbHVlKydcIl0nIClcblx0XHRcdFx0LnByb3AoICdjaGVja2VkJywgdHJ1ZSApO1xuIFx0XHR9XG5cdH0pO1xuXG5cdC8qKlxuIFx0ICpcdGZpZWxkIHR5cGUgc2VsZWN0XG4gXHQgKi9cblx0cWUuZmllbGQuYWRkX3R5cGUoIHtcblx0XHR0eXBlOidzZWxlY3QnLFxuXHRcdGluaXRpYWxpemU6ZnVuY3Rpb24oKSB7XG5cdFx0XHRxZS5maWVsZC5WaWV3LnByb3RvdHlwZS5pbml0aWFsaXplLmFwcGx5KHRoaXMsYXJndW1lbnRzKTtcblxuXHRcdFx0dGhpcy4kaW5wdXQgPSB0aGlzLiQoJ3NlbGVjdCcpLnByb3AoICdyZWFkb25seScsIHRydWUgKTtcblx0XHR9XG5cdH0pO1xuXG5cdC8qKlxuIFx0ICpcdGZpZWxkIHR5cGUgdHJ1ZV9mYWxzZVxuIFx0ICovXG5cdCBxZS5maWVsZC5hZGRfdHlwZSgge1xuIFx0XHR0eXBlOid0cnVlX2ZhbHNlJyxcbiBcdFx0aW5pdGlhbGl6ZTpmdW5jdGlvbigpIHtcbiBcdFx0XHRxZS5maWVsZC5WaWV3LnByb3RvdHlwZS5pbml0aWFsaXplLmFwcGx5KHRoaXMsYXJndW1lbnRzKTtcblxuIFx0XHRcdHRoaXMuJCgnW3R5cGU9XCJyYWRpb1wiXScpLnByb3AoICdyZWFkb25seScsIHRydWUgKTtcbiBcdFx0fSxcbiBcdFx0c2V0VmFsdWU6ZnVuY3Rpb24oIHZhbHVlICkge1xuXHRcdFx0dGhpcy5kbnRDaGFuZ2VkKCk7XG5cdFx0XHR0aGlzLiQoJ1t0eXBlPVwicmFkaW9cIl1bdmFsdWU9XCInK3ZhbHVlKydcIl0nIClcblx0XHRcdFx0LnByb3AoICdjaGVja2VkJywgdHJ1ZSApO1xuICBcdFx0fVxuIFx0fSk7XG5cdC8vIFRvZG9cblxufSkoIGpRdWVyeSwgYWNmX3F1aWNrZWRpdCApO1xuIiwiLy92YXIgYWNmX3F1aWNrZWRpdCA9IHt9O1xuXG5cbihmdW5jdGlvbigkLHFlKSB7XG5cblxuXG5cdGlmICggJ3VuZGVmaW5lZCcgIT09IHR5cGVvZiBpbmxpbmVFZGl0UG9zdCApIHtcblx0XHQvLyB3ZSBjcmVhdGUgYSBjb3B5IG9mIHRoZSBXUCBpbmxpbmUgZWRpdCBwb3N0IGZ1bmN0aW9uXG5cdFx0dmFyIF93cF9pbmxpbmVfZWRpdF9wb3N0ID0gaW5saW5lRWRpdFBvc3QuZWRpdCxcblx0XHRcdF93cF9pbmxpbmVfZWRpdF9zYXZlID0gaW5saW5lRWRpdFBvc3Quc2F2ZSxcblx0XHRcdF93cF9pbmxpbmVfZWRpdF9yZXZlcnQgPSBpbmxpbmVFZGl0UG9zdC5yZXZlcnQsXG5cdFx0XHRfd3BfaW5saW5lX2VkaXRfYnVsayA9ICBpbmxpbmVFZGl0UG9zdC5zZXRCdWxrO1xuXHRcdC8vIGFuZCB0aGVuIHdlIG92ZXJ3cml0ZSB0aGUgZnVuY3Rpb24gd2l0aCBvdXIgb3duIGNvZGVcblx0XHRpbmxpbmVFZGl0UG9zdC5lZGl0ID0gZnVuY3Rpb24oIGlkICkge1xuXHRcdFx0dmFyIG9iamVjdF9pZCwgJHRyO1xuXG5cblx0XHRcdC8vIFwiY2FsbFwiIHRoZSBvcmlnaW5hbCBXUCBlZGl0IGZ1bmN0aW9uXG5cdFx0XHQvLyB3ZSBkb24ndCB3YW50IHRvIGxlYXZlIFdvcmRQcmVzcyBoYW5naW5nXG5cdFx0XHRfd3BfaW5saW5lX2VkaXRfcG9zdC5hcHBseSggdGhpcywgYXJndW1lbnRzICk7XG5cblx0XHRcdC8vIGdldCB0aGUgcG9zdCBJRFxuXHRcdFx0b2JqZWN0X2lkID0gMDtcblx0XHRcdGlmICggdHlwZW9mKCBpZCApID09PSAnb2JqZWN0JyApIHtcblx0XHRcdFx0b2JqZWN0X2lkID0gcGFyc2VJbnQoIHRoaXMuZ2V0SWQoIGlkICkgKTtcblx0XHRcdH1cblx0XHRcdCR0ciA9ICQoJyNlZGl0LScgKyBvYmplY3RfaWQgKTtcbi8vXHRcdFx0Z2V0X2FjZl9wb3N0X2RhdGEoIG9iamVjdF9pZCAsICQoJyNlZGl0LScgKyBvYmplY3RfaWQgKSApO1xuXG5cdFx0XHR0aGlzLmFjZl9xZWRfZm9ybSA9IG5ldyBxZS5mb3JtLlF1aWNrRWRpdCh7XG5cdFx0XHRcdGVsOiAkdHIuZ2V0KDApLFxuXHRcdFx0XHRvYmplY3RfaWQ6IG9iamVjdF9pZFxuXHRcdFx0fSk7XG5cdFx0fTtcblx0XHRpbmxpbmVFZGl0UG9zdC5yZXZlcnQgPSBmdW5jdGlvbigpIHtcblx0XHRcdC8vIHVubG9hZCBmb3Jtc1xuXHRcdFx0ISEgdGhpcy5hY2ZfcWVkX2Zvcm0gJiYgdGhpcy5hY2ZfcWVkX2Zvcm0udW5sb2FkKCk7XG5cdFx0XHRyZXR1cm4gX3dwX2lubGluZV9lZGl0X3JldmVydC5hcHBseSggdGhpcywgYXJndW1lbnRzICk7XG5cdFx0fVxuXHRcdGlubGluZUVkaXRQb3N0LnNhdmUgPSBmdW5jdGlvbigpIHtcblx0XHRcdC8vIHVubG9hZCBmb3Jtc1xuXHRcdFx0ISEgdGhpcy5hY2ZfcWVkX2Zvcm0gJiYgdGhpcy5hY2ZfcWVkX2Zvcm0udW5sb2FkKCk7XG5cdFx0XHRyZXR1cm4gX3dwX2lubGluZV9lZGl0X3NhdmUuYXBwbHkoIHRoaXMsIGFyZ3VtZW50cyApO1xuXHRcdH1cblx0XHRpbmxpbmVFZGl0UG9zdC5zZXRCdWxrID0gZnVuY3Rpb24oKSB7XG5cdFx0XHR2YXIgcmV0ID0gX3dwX2lubGluZV9lZGl0X2J1bGsuYXBwbHkoIHRoaXMsIGFyZ3VtZW50cyApO1xuXG5cdFx0XHR0aGlzLmFjZl9xZWRfZm9ybSA9IG5ldyBxZS5mb3JtLkJ1bGtFZGl0KHtcblx0XHRcdFx0ZWw6ICQoJyNidWxrLWVkaXQnKS5nZXQoMCksXG4vL1x0XHRcdFx0b2JqZWN0X2lkOiBvYmplY3RfaWRcblx0XHRcdH0pO1xuXG5cdFx0XHRyZXR1cm4gcmV0O1xuXHRcdH1cblx0fVxuXHQvLyB0b2RvOiBpbmxpbmVFZGl0VGF4XG5cdGlmICggJ3VuZGVmaW5lZCcgIT09IHR5cGVvZiBpbmxpbmVFZGl0VGF4ICkge1xuXG5cdFx0dmFyIF93cF9pbmxpbmVfZWRpdF90YXggPSBpbmxpbmVFZGl0VGF4LmVkaXQsXG5cdFx0XHRfd3BfaW5saW5lX2VkaXRfc2F2ZSA9IGlubGluZUVkaXRUYXguc2F2ZSxcblx0XHRcdF93cF9pbmxpbmVfZWRpdF9yZXZlcnQgPSBpbmxpbmVFZGl0VGF4LnJldmVydDtcblxuXHRcdGlubGluZUVkaXRUYXguZWRpdCA9IGZ1bmN0aW9uKCBpZCApIHtcblx0XHRcdHZhciBvYmplY3RfaWQsICR0cixcblx0XHRcdFx0dGF4ID0gJCgnaW5wdXRbbmFtZT1cInRheG9ub215XCJdJykudmFsKCk7XG5cblx0XHRcdF93cF9pbmxpbmVfZWRpdF90YXguYXBwbHkoIHRoaXMsIGFyZ3VtZW50cyApO1xuXG5cdFx0XHQvLyBnZXQgdGhlIHBvc3QgSURcblx0XHRcdG9iamVjdF9pZCA9IDA7XG5cdFx0XHRpZiAoIHR5cGVvZiggaWQgKSA9PT0gJ29iamVjdCcgKSB7XG5cdFx0XHRcdG9iamVjdF9pZCA9IHBhcnNlSW50KCB0aGlzLmdldElkKCBpZCApICk7XG5cdFx0XHR9XG5cdFx0XHQkdHIgPSAkKCcjZWRpdC0nICsgb2JqZWN0X2lkICk7XG5cblx0XHRcdHRoaXMuYWNmX3FlZF9mb3JtID0gbmV3IHFlLmZvcm0uUXVpY2tFZGl0KHtcblx0XHRcdFx0ZWw6ICR0ci5nZXQoMCksXG5cdFx0XHRcdG9iamVjdF9pZDogdGF4ICsgJ18nICsgb2JqZWN0X2lkXG5cdFx0XHR9KTtcblxuXHRcdH07XG5cdFx0aW5saW5lRWRpdFRheC5yZXZlcnQgPSBmdW5jdGlvbigpIHtcblx0XHRcdC8vIHVubG9hZCBmb3Jtc1xuXHRcdFx0ISEgdGhpcy5hY2ZfcWVkX2Zvcm0gJiYgdGhpcy5hY2ZfcWVkX2Zvcm0udW5sb2FkKCk7XG5cdFx0XHRyZXR1cm4gX3dwX2lubGluZV9lZGl0X3JldmVydC5hcHBseSggdGhpcywgYXJndW1lbnRzICk7XG5cdFx0fVxuXHRcdGlubGluZUVkaXRUYXguc2F2ZSA9IGZ1bmN0aW9uKCkge1xuXHRcdFx0Ly8gdW5sb2FkIGZvcm1zXG5cdFx0XHQhISB0aGlzLmFjZl9xZWRfZm9ybSAmJiB0aGlzLmFjZl9xZWRfZm9ybS51bmxvYWQoKTtcblx0XHRcdHJldHVybiBfd3BfaW5saW5lX2VkaXRfc2F2ZS5hcHBseSggdGhpcywgYXJndW1lbnRzICk7XG5cdFx0fVxuXHR9XG5cbn0pKCBqUXVlcnksIHdpbmRvdy5hY2ZfcXVpY2tlZGl0ICk7XG4iLCIoZnVuY3Rpb24oJCkge1xuXHQkKCcuYWNmLXFlZi1nYWxsZXJ5LWNvbCcpLm9uKCdtb3VzZW1vdmUnLGZ1bmN0aW9uKGUpe1xuXHRcdHZhciAkdGhpc1x0PSAkKHRoaXMpLFxuXHRcdFx0JGltZ1x0PSAkKHRoaXMpLmZpbmQoJ2ltZycpXG5cdFx0XHR4XHRcdD0gZS5vZmZzZXRYLFxuXHRcdFx0bnVtXHRcdD0gJGltZy5sZW5ndGgsXG5cdFx0XHRzdGVwXHQ9ICQodGhpcykud2lkdGgoKSAvIG51bTtcblxuXHRcdCRpbWcuZWFjaCggZnVuY3Rpb24oaSxlbCkge1xuXHRcdFx0aWYgKHggPj0gc3RlcCppKSB7XG5cdFx0XHRcdCQoZWwpLnNob3coKTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdCQoZWwpLmhpZGUoKTtcblx0XHRcdH1cblx0XHR9ICk7XG5cdH0pO1xufSkoalF1ZXJ5KTsiXX0=
